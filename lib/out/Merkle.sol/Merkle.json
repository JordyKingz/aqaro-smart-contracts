{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "node",
          "type": "uint256"
        }
      ],
      "name": "getProof",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "getRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeafPairs",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2ceil",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2ceilBitMagic",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32",
          "name": "valueToProve",
          "type": "bytes32"
        }
      ],
      "name": "verifyProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506108ed806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632e08d6021461006757806358161a421461008d578063b8616195146100b0578063cf06c7b7146100d0578063dd1d2599146100e3578063e27d5153146100f6575b600080fd5b61007a61007536600461072f565b610109565b6040519081526020015b60405180910390f35b6100a061009b36600461076c565b6101a9565b6040519015158152602001610084565b6100c36100be3660046107bc565b6101f3565b6040516100849190610801565b61007a6100de366004610845565b61037a565b61007a6100f136600461085e565b6104b7565b61007a610104366004610845565b6104e5565b6000600182511161016d5760405162461bcd60e51b815260206004820152602360248201527f776f6e27742067656e657261746520726f6f7420666f722073696e676c65206c60448201526232b0b360e91b60648201526084015b60405180910390fd5b6001825111156101875761018082610510565b915061016d565b8160008151811061019a5761019a610880565b60200260200101519050919050565b81516000908290825b818110156101e7576101dd838783815181106101d0576101d0610880565b60200260200101516104b7565b92506001016101b2565b50509093149392505050565b606060018351116102525760405162461bcd60e51b8152602060048201526024808201527f776f6e27742067656e65726174652070726f6f6620666f722073696e676c65206044820152633632b0b360e11b6064820152608401610164565b600061025e845161037a565b67ffffffffffffffff8111156102765761027661067e565b60405190808252806020026020018201604052801561029f578160200160208202803683370190505b50905060005b60018551111561037057836001166001036102fa578460018503815181106102cf576102cf610880565b60200260200101518282815181106102e9576102e9610880565b602002602001018181525050610357565b8451846001010361031b576000801b8282815181106102e9576102e9610880565b84846001018151811061033057610330610880565b602002602001015182828151811061034a5761034a610880565b6020026020010181815250505b60010160028404935061036985610510565b94506102a5565b5090505b92915050565b60006001821161038c57506000919050565b600082600160801b81106103ad57608093841c936103aa9083610896565b91505b6801000000000000000084106103d057604093841c936103cd9083610896565b91505b64010000000084106103ef57602093841c936103ec9083610896565b91505b62010000841061040c57601093841c936104099083610896565b91505b610100841061042857600893841c936104259083610896565b91505b6010841061044357600493841c936104409083610896565b91505b6004841061045e57600293841c9361045b9083610896565b91505b6002841061047457610471600183610896565b91505b60008161048381196001610896565b16905081811480156104955750600083115b156104a35750909392505050565b6104ae836001610896565b95945050505050565b600081831080156104cf5783600052826020526104d8565b82600052836020525b5050604060002092915050565b6000808219600101831683145b831561050857600193841c9391909101906104f2565b900392915050565b606080600083519050806001166001036105bf576002810460010167ffffffffffffffff8111156105435761054361067e565b60405190808252806020026020018201604052801561056c578160200160208202803683370190505b50915061059884600183038151811061058757610587610880565b60200260200101516000801b6104b7565b826001845103815181106105ae576105ae610880565b602002602001018181525050610608565b6002810467ffffffffffffffff8111156105db576105db61067e565b604051908082528060200260200182016040528015610604578160200160208202803683370190505b5091505b6000805b600183038110156106745761064986828151811061062c5761062c610880565b60200260200101518783600101815181106101d0576101d0610880565b84838151811061065b5761065b610880565b602090810291909101015260019091019060020161060c565b5091949350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126106a557600080fd5b8135602067ffffffffffffffff808311156106c2576106c261067e565b8260051b604051601f19603f830116810181811084821117156106e7576106e761067e565b60405293845285810183019383810192508785111561070557600080fd5b83870191505b848210156107245781358352918301919083019061070b565b979650505050505050565b60006020828403121561074157600080fd5b813567ffffffffffffffff81111561075857600080fd5b61076484828501610694565b949350505050565b60008060006060848603121561078157600080fd5b83359250602084013567ffffffffffffffff81111561079f57600080fd5b6107ab86828701610694565b925050604084013590509250925092565b600080604083850312156107cf57600080fd5b823567ffffffffffffffff8111156107e657600080fd5b6107f285828601610694565b95602094909401359450505050565b6020808252825182820181905260009190848201906040850190845b818110156108395783518352928401929184019160010161081d565b50909695505050505050565b60006020828403121561085757600080fd5b5035919050565b6000806040838503121561087157600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b8082018082111561037457634e487b7160e01b600052601160045260246000fdfea2646970667358221220ae0f1c0473419c9efdf5acf91083986ce91b32f29b8a6fc0b1eceb6791a674b964736f6c63430008110033",
    "sourceMap": "210:588:1:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80632e08d6021461006757806358161a421461008d578063b8616195146100b0578063cf06c7b7146100d0578063dd1d2599146100e3578063e27d5153146100f6575b600080fd5b61007a61007536600461072f565b610109565b6040519081526020015b60405180910390f35b6100a061009b36600461076c565b6101a9565b6040519015158152602001610084565b6100c36100be3660046107bc565b6101f3565b6040516100849190610801565b61007a6100de366004610845565b61037a565b61007a6100f136600461085e565b6104b7565b61007a610104366004610845565b6104e5565b6000600182511161016d5760405162461bcd60e51b815260206004820152602360248201527f776f6e27742067656e657261746520726f6f7420666f722073696e676c65206c60448201526232b0b360e91b60648201526084015b60405180910390fd5b6001825111156101875761018082610510565b915061016d565b8160008151811061019a5761019a610880565b60200260200101519050919050565b81516000908290825b818110156101e7576101dd838783815181106101d0576101d0610880565b60200260200101516104b7565b92506001016101b2565b50509093149392505050565b606060018351116102525760405162461bcd60e51b8152602060048201526024808201527f776f6e27742067656e65726174652070726f6f6620666f722073696e676c65206044820152633632b0b360e11b6064820152608401610164565b600061025e845161037a565b67ffffffffffffffff8111156102765761027661067e565b60405190808252806020026020018201604052801561029f578160200160208202803683370190505b50905060005b60018551111561037057836001166001036102fa578460018503815181106102cf576102cf610880565b60200260200101518282815181106102e9576102e9610880565b602002602001018181525050610357565b8451846001010361031b576000801b8282815181106102e9576102e9610880565b84846001018151811061033057610330610880565b602002602001015182828151811061034a5761034a610880565b6020026020010181815250505b60010160028404935061036985610510565b94506102a5565b5090505b92915050565b60006001821161038c57506000919050565b600082600160801b81106103ad57608093841c936103aa9083610896565b91505b6801000000000000000084106103d057604093841c936103cd9083610896565b91505b64010000000084106103ef57602093841c936103ec9083610896565b91505b62010000841061040c57601093841c936104099083610896565b91505b610100841061042857600893841c936104259083610896565b91505b6010841061044357600493841c936104409083610896565b91505b6004841061045e57600293841c9361045b9083610896565b91505b6002841061047457610471600183610896565b91505b60008161048381196001610896565b16905081811480156104955750600083115b156104a35750909392505050565b6104ae836001610896565b95945050505050565b600081831080156104cf5783600052826020526104d8565b82600052836020525b5050604060002092915050565b6000808219600101831683145b831561050857600193841c9391909101906104f2565b900392915050565b606080600083519050806001166001036105bf576002810460010167ffffffffffffffff8111156105435761054361067e565b60405190808252806020026020018201604052801561056c578160200160208202803683370190505b50915061059884600183038151811061058757610587610880565b60200260200101516000801b6104b7565b826001845103815181106105ae576105ae610880565b602002602001018181525050610608565b6002810467ffffffffffffffff8111156105db576105db61067e565b604051908082528060200260200182016040528015610604578160200160208202803683370190505b5091505b6000805b600183038110156106745761064986828151811061062c5761062c610880565b60200260200101518783600101815181106101d0576101d0610880565b84838151811061065b5761065b610880565b602090810291909101015260019091019060020161060c565b5091949350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126106a557600080fd5b8135602067ffffffffffffffff808311156106c2576106c261067e565b8260051b604051601f19603f830116810181811084821117156106e7576106e761067e565b60405293845285810183019383810192508785111561070557600080fd5b83870191505b848210156107245781358352918301919083019061070b565b979650505050505050565b60006020828403121561074157600080fd5b813567ffffffffffffffff81111561075857600080fd5b61076484828501610694565b949350505050565b60008060006060848603121561078157600080fd5b83359250602084013567ffffffffffffffff81111561079f57600080fd5b6107ab86828701610694565b925050604084013590509250925092565b600080604083850312156107cf57600080fd5b823567ffffffffffffffff8111156107e657600080fd5b6107f285828601610694565b95602094909401359450505050565b6020808252825182820181905260009190848201906040850190845b818110156108395783518352928401929184019160010161081d565b50909695505050505050565b60006020828403121561085757600080fd5b5035919050565b6000806040838503121561087157600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b8082018082111561037457634e487b7160e01b600052601160045260246000fdfea2646970667358221220ae0f1c0473419c9efdf5acf91083986ce91b32f29b8a6fc0b1eceb6791a674b964736f6c63430008110033",
    "sourceMap": "210:588:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;971:253:2;;;;;;:::i;:::-;;:::i;:::-;;;1552:25:35;;;1540:2;1525:18;971:253:2;;;;;;;;456:431;;;;;;:::i;:::-;;:::i;:::-;;;2242:14:35;;2235:22;2217:41;;2205:2;2190:18;456:431:2;2077:187:35;1230:1108:2;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4952:952::-;;;;;;:::i;:::-;;:::i;375:421:1:-;;;;;;:::i;:::-;;:::i;3473:1327:2:-;;;;;;:::i;:::-;;:::i;971:253::-;1032:7;1073:1;1059:4;:11;:15;1051:63;;;;-1:-1:-1;;;1051:63:2;;4149:2:35;1051:63:2;;;4131:21:35;4188:2;4168:18;;;4161:30;4227:34;4207:18;;;4200:62;-1:-1:-1;;;4278:18:35;;;4271:33;4321:19;;1051:63:2;;;;;;;;;1144:1;1130:4;:11;:15;1124:70;;;1168:15;1178:4;1168:9;:15::i;:::-;1161:22;;1124:70;;;1210:4;1215:1;1210:7;;;;;;;;:::i;:::-;;;;;;;1203:14;;971:253;;;:::o;456:431::-;694:12;;560:4;;655:12;;560:4;732:107;752:6;748:1;:10;732:107;;;792:36;806:11;819:5;825:1;819:8;;;;;;;;:::i;:::-;;;;;;;792:13;:36::i;:::-;778:50;-1:-1:-1;760:3:2;;732:107;;;-1:-1:-1;;861:19:2;;;;456:431;-1:-1:-1;;;456:431:2:o;1230:1108::-;1306:16;1356:1;1342:4;:11;:15;1334:64;;;;-1:-1:-1;;;1334:64:2;;4685:2:35;1334:64:2;;;4667:21:35;4724:2;4704:18;;;4697:30;4763:34;4743:18;;;4736:62;-1:-1:-1;;;4814:18:35;;;4807:34;4858:19;;1334:64:2;4483:400:35;1334:64:2;1484:23;1524:29;1541:4;:11;1524:16;:29::i;:::-;1510:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1510:44:2;;1484:70;;1564:11;1890:419;1910:1;1896:4;:11;:15;1890:419;;;1950:4;1957:3;1950:10;1964:1;1950:15;1947:264;;1999:4;2011:1;2004:4;:8;1999:14;;;;;;;;:::i;:::-;;;;;;;1985:6;1992:3;1985:11;;;;;;;;:::i;:::-;;;;;;:28;;;;;1947:264;;;2062:4;:11;2050:4;2057:1;2050:8;:23;2046:165;;2115:1;2107:10;;2093:6;2100:3;2093:11;;;;;;;;:::i;2046:165::-;2182:4;2187;2194:1;2187:8;2182:14;;;;;;;;:::i;:::-;;;;;;;2168:6;2175:3;2168:11;;;;;;;;:::i;:::-;;;;;;:28;;;;;2046:165;2224:5;;2251:1;2243:9;;;;2283:15;2293:4;2283:9;:15::i;:::-;2276:22;;1890:419;;;-1:-1:-1;2325:6:2;-1:-1:-1;1230:1108:2;;;;;:::o;4952:952::-;5010:7;5037:1;5032;:6;5028:45;;-1:-1:-1;5061:1:2;;4952:952;-1:-1:-1;4952:952:2:o;5028:45::-;5082:11;5120:1;-1:-1:-1;;;5135:11:2;;5131:75;;5168:3;5162:9;;;;5185:10;;;;:::i;:::-;;;5131:75;5224:5;5219:1;:10;5215:72;;5251:2;5245:8;;;;5267:9;;;;:::i;:::-;;;5215:72;5305:5;5300:1;:10;5296:72;;5332:2;5326:8;;;;5348:9;;;;:::i;:::-;;;5296:72;5386:5;5381:1;:10;5377:72;;5413:2;5407:8;;;;5429:9;;;;:::i;:::-;;;5377:72;5467:4;5462:1;:9;5458:69;;5493:1;5487:7;;;;5508:8;;;;:::i;:::-;;;5458:69;5545:4;5540:1;:9;5536:69;;5571:1;5565:7;;;;5586:8;;;;:::i;:::-;;;5536:69;5623:4;5618:1;:9;5614:69;;5649:1;5643:7;;;;5664:8;;;;:::i;:::-;;;5614:69;5701:4;5696:1;:9;5692:48;;5721:8;5728:1;5721:8;;:::i;:::-;;;5692:48;5750:11;5776:2;5765:7;:3;;5771:1;5765:7;:::i;:::-;5764:14;5750:28;;5800:2;5793:3;:9;5792:24;;;;;5814:1;5808:3;:7;5792:24;5788:110;;;-1:-1:-1;5839:3:2;;4952:952;-1:-1:-1;;;4952:952:2:o;5788:110::-;5880:7;:3;5886:1;5880:7;:::i;:::-;5873:14;4952:952;-1:-1:-1;;;;;4952:952:2:o;375:421:1:-;457:13;512:15;;;540:92;;;;683:4;678:3;671:17;718:5;712:4;705:19;505:233;;540:92;577:5;572:3;565:18;613:4;607;600:18;505:233;-1:-1:-1;;775:4:1;770:3;760:20;;375:421;-1:-1:-1;;375:421:1:o;3473:1327:2:-;3523:7;;4486:6;;4494:1;4482:14;4478:22;;4475:29;;4666:66;4673:5;;4666:66;;4700:1;4694:7;;;;4715:6;;;;;4666:66;;;4741:12;;;3473:1327;-1:-1:-1;;3473:1327:2:o;2417:937::-;2481:16;2509:23;2793:14;2810:4;:11;2793:28;;2835:6;2844:3;2835:12;2851:1;2835:17;2831:235;;2899:1;2890:6;:10;2903:1;2890:14;2876:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2876:29:2;;2867:38;;2947:43;2961:4;2975:1;2966:6;:10;2961:16;;;;;;;;:::i;:::-;;;;;;;2987:1;2979:10;;2947:13;:43::i;:::-;2919:6;2942:1;2926:6;:13;:17;2919:25;;;;;;;;:::i;:::-;;;;;;:71;;;;;2831:235;;;3053:1;3044:6;:10;3030:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3030:25:2;;3021:34;;2831:235;3164:11;3194:9;3189:130;3220:1;3213:6;:8;3209:1;:12;3189:130;;;3256:33;3270:4;3275:1;3270:7;;;;;;;;:::i;:::-;;;;;;;3279:4;3284:1;3286;3284:3;3279:9;;;;;;;;:::i;3256:33::-;3242:6;3249:3;3242:11;;;;;;;;:::i;:::-;;;;;;;;;;:47;3303:5;;;;;3226:1;3223:4;3189:130;;;-1:-1:-1;3341:6:2;;2417:937;-1:-1:-1;;;;2417:937:2:o;14:127:35:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:902;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;307:6;294:20;333:4;356:18;393:2;389;386:10;383:36;;;399:18;;:::i;:::-;445:2;442:1;438:10;477:2;471:9;540:2;536:7;531:2;527;523:11;519:25;511:6;507:38;595:6;583:10;580:22;575:2;563:10;560:18;557:46;554:72;;;606:18;;:::i;:::-;642:2;635:22;692:18;;;768:15;;;764:24;;;726:15;;;;-1:-1:-1;800:15:35;;;797:35;;;828:1;825;818:12;797:35;864:2;856:6;852:15;841:26;;876:142;892:6;887:3;884:15;876:142;;;958:17;;946:30;;996:12;;;;909;;;;876:142;;;1036:6;146:902;-1:-1:-1;;;;;;;146:902:35:o;1053:348::-;1137:6;1190:2;1178:9;1169:7;1165:23;1161:32;1158:52;;;1206:1;1203;1196:12;1158:52;1246:9;1233:23;1279:18;1271:6;1268:30;1265:50;;;1311:1;1308;1301:12;1265:50;1334:61;1387:7;1378:6;1367:9;1363:22;1334:61;:::i;:::-;1324:71;1053:348;-1:-1:-1;;;;1053:348:35:o;1588:484::-;1690:6;1698;1706;1759:2;1747:9;1738:7;1734:23;1730:32;1727:52;;;1775:1;1772;1765:12;1727:52;1811:9;1798:23;1788:33;;1872:2;1861:9;1857:18;1844:32;1899:18;1891:6;1888:30;1885:50;;;1931:1;1928;1921:12;1885:50;1954:61;2007:7;1998:6;1987:9;1983:22;1954:61;:::i;:::-;1944:71;;;2062:2;2051:9;2047:18;2034:32;2024:42;;1588:484;;;;;:::o;2269:416::-;2362:6;2370;2423:2;2411:9;2402:7;2398:23;2394:32;2391:52;;;2439:1;2436;2429:12;2391:52;2479:9;2466:23;2512:18;2504:6;2501:30;2498:50;;;2544:1;2541;2534:12;2498:50;2567:61;2620:7;2611:6;2600:9;2596:22;2567:61;:::i;:::-;2557:71;2675:2;2660:18;;;;2647:32;;-1:-1:-1;;;;2269:416:35:o;2690:632::-;2861:2;2913:21;;;2983:13;;2886:18;;;3005:22;;;2832:4;;2861:2;3084:15;;;;3058:2;3043:18;;;2832:4;3127:169;3141:6;3138:1;3135:13;3127:169;;;3202:13;;3190:26;;3271:15;;;;3236:12;;;;3163:1;3156:9;3127:169;;;-1:-1:-1;3313:3:35;;2690:632;-1:-1:-1;;;;;;2690:632:35:o;3327:180::-;3386:6;3439:2;3427:9;3418:7;3414:23;3410:32;3407:52;;;3455:1;3452;3445:12;3407:52;-1:-1:-1;3478:23:35;;3327:180;-1:-1:-1;3327:180:35:o;3694:248::-;3762:6;3770;3823:2;3811:9;3802:7;3798:23;3794:32;3791:52;;;3839:1;3836;3829:12;3791:52;-1:-1:-1;;3862:23:35;;;3932:2;3917:18;;;3904:32;;-1:-1:-1;3694:248:35:o;4351:127::-;4412:10;4407:3;4403:20;4400:1;4393:31;4443:4;4440:1;4433:15;4467:4;4464:1;4457:15;5020:222;5085:9;;;5106:10;;;5103:133;;;5158:10;5153:3;5149:20;5146:1;5139:31;5193:4;5190:1;5183:15;5221:4;5218:1;5211:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getProof(bytes32[],uint256)": "b8616195",
    "getRoot(bytes32[])": "2e08d602",
    "hashLeafPairs(bytes32,bytes32)": "dd1d2599",
    "log2ceil(uint256)": "e27d5153",
    "log2ceilBitMagic(uint256)": "cf06c7b7",
    "verifyProof(bytes32,bytes32[],bytes32)": "58161a42"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"node\",\"type\":\"uint256\"}],\"name\":\"getProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"getRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"hashLeafPairs\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"log2ceil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"log2ceilBitMagic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"valueToProve\",\"type\":\"bytes32\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"dmfxyz\",\"details\":\"Note Generic Merkle Tree\",\"kind\":\"dev\",\"methods\":{\"log2ceil(uint256)\":{\"details\":\"Note that x is assumed > 0\"},\"log2ceilBitMagic(uint256)\":{\"details\":\"Note that x assumed > 1\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"hashLeafPairs(bytes32,bytes32)\":{\"notice\":\"ascending sort and concat prior to hashing\"},\"log2ceilBitMagic(uint256)\":{\"notice\":\"Original bitmagic adapted from https://github.com/paulrberg/prb-math/blob/main/contracts/PRBMath.sol\"}},\"notice\":\"Nascent, simple, kinda efficient (and improving!) Merkle proof generator and verifier\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Helpers/Merkle.sol\":\"Merkle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":synthetix/=node_modules/synthetix/\"]},\"sources\":{\"contracts/Helpers/Merkle.sol\":{\"keccak256\":\"0xa41c45d0f649e2fd9e2d8c5792d3a53a64c4c07d7acbd3702eed669a6f431e4f\",\"urls\":[\"bzz-raw://6655b4c9043f6131c64e434dd440fb889ef891d694a7ad42a4e3c009d03c96f2\",\"dweb:/ipfs/QmdT6HJThka957K7Qg8dXaLuE54RjSfoWPP9A7unEWniQC\"]},\"contracts/Helpers/common/MurkyBase.sol\":{\"keccak256\":\"0x2313599028df86e627a8fa231fb05be3e92183014b12bdf8f110cff9a5e676ef\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4e44806b3d4bc4314c59c74ffe1f4c6fe151321ce0e3579ea0ca39a1031a0f20\",\"dweb:/ipfs/QmUUFnrys6av3fGnjxGVfMeW115LTxU7PB5RG5bFYfBdAw\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "node",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getProof",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "left",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "right",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashLeafPairs",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "log2ceil",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "log2ceilBitMagic",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "valueToProve",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "verifyProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "log2ceil(uint256)": {
            "details": "Note that x is assumed > 0"
          },
          "log2ceilBitMagic(uint256)": {
            "details": "Note that x assumed > 1"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "hashLeafPairs(bytes32,bytes32)": {
            "notice": "ascending sort and concat prior to hashing"
          },
          "log2ceilBitMagic(uint256)": {
            "notice": "Original bitmagic adapted from https://github.com/paulrberg/prb-math/blob/main/contracts/PRBMath.sol"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=foundry/lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":synthetix/=node_modules/synthetix/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Helpers/Merkle.sol": "Merkle"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Helpers/Merkle.sol": {
        "keccak256": "0xa41c45d0f649e2fd9e2d8c5792d3a53a64c4c07d7acbd3702eed669a6f431e4f",
        "urls": [
          "bzz-raw://6655b4c9043f6131c64e434dd440fb889ef891d694a7ad42a4e3c009d03c96f2",
          "dweb:/ipfs/QmdT6HJThka957K7Qg8dXaLuE54RjSfoWPP9A7unEWniQC"
        ],
        "license": null
      },
      "contracts/Helpers/common/MurkyBase.sol": {
        "keccak256": "0x2313599028df86e627a8fa231fb05be3e92183014b12bdf8f110cff9a5e676ef",
        "urls": [
          "bzz-raw://4e44806b3d4bc4314c59c74ffe1f4c6fe151321ce0e3579ea0ca39a1031a0f20",
          "dweb:/ipfs/QmUUFnrys6av3fGnjxGVfMeW115LTxU7PB5RG5bFYfBdAw"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Helpers/Merkle.sol",
    "id": 340,
    "exportedSymbols": {
      "Merkle": [
        339
      ],
      "MurkyBase": [
        856
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:798:1",
    "nodes": [
      {
        "id": 321,
        "nodeType": "PragmaDirective",
        "src": "0:23:1",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 322,
        "nodeType": "ImportDirective",
        "src": "25:32:1",
        "nodes": [],
        "absolutePath": "contracts/Helpers/common/MurkyBase.sol",
        "file": "./common/MurkyBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 340,
        "sourceUnit": 857,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 339,
        "nodeType": "ContractDefinition",
        "src": "210:588:1",
        "nodes": [
          {
            "id": 338,
            "nodeType": "FunctionDefinition",
            "src": "375:421:1",
            "nodes": [],
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "472:324:1",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "491:299:1",
                    "statements": [
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "547:85:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "572:3:1",
                                        "type": "",
                                        "value": "0x0"
                                      },
                                      {
                                        "name": "right",
                                        "nodeType": "YulIdentifier",
                                        "src": "577:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "565:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "565:18:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "565:18:1"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "607:4:1",
                                        "type": "",
                                        "value": "0x20"
                                      },
                                      {
                                        "name": "left",
                                        "nodeType": "YulIdentifier",
                                        "src": "613:4:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "600:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "600:18:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "600:18:1"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "540:92:1",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "545:1:1",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "653:85:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "678:3:1",
                                        "type": "",
                                        "value": "0x0"
                                      },
                                      {
                                        "name": "left",
                                        "nodeType": "YulIdentifier",
                                        "src": "683:4:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "671:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "671:17:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "671:17:1"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "712:4:1",
                                        "type": "",
                                        "value": "0x20"
                                      },
                                      {
                                        "name": "right",
                                        "nodeType": "YulIdentifier",
                                        "src": "718:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "705:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "705:19:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "705:19:1"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "645:93:1",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "name": "left",
                              "nodeType": "YulIdentifier",
                              "src": "515:4:1"
                            },
                            {
                              "name": "right",
                              "nodeType": "YulIdentifier",
                              "src": "521:5:1"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "512:2:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "512:15:1"
                        },
                        "nodeType": "YulSwitch",
                        "src": "505:233:1"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "751:29:1",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "770:3:1",
                              "type": "",
                              "value": "0x0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "775:4:1",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "760:9:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "760:20:1"
                        },
                        "variableNames": [
                          {
                            "name": "_hash",
                            "nodeType": "YulIdentifier",
                            "src": "751:5:1"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 334,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "751:5:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 328,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "515:4:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 328,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "613:4:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 328,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "683:4:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 330,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "521:5:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 330,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "577:5:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 330,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "718:5:1",
                      "valueSize": 1
                    }
                  ],
                  "id": 336,
                  "nodeType": "InlineAssembly",
                  "src": "482:308:1"
                }
              ]
            },
            "baseFunctions": [
              354
            ],
            "documentation": {
              "id": 326,
              "nodeType": "StructuredDocumentation",
              "src": "324:46:1",
              "text": "ascending sort and concat prior to hashing"
            },
            "functionSelector": "dd1d2599",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashLeafPairs",
            "nameLocation": "384:13:1",
            "overrides": {
              "id": 332,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "439:8:1"
            },
            "parameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "left",
                  "nameLocation": "406:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "398:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "398:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "right",
                  "nameLocation": "420:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "412:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "397:29:1"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "465:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "457:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "456:15:1"
            },
            "scope": 339,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 324,
              "name": "MurkyBase",
              "nameLocations": [
                "229:9:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 856,
              "src": "229:9:1"
            },
            "id": 325,
            "nodeType": "InheritanceSpecifier",
            "src": "229:9:1"
          }
        ],
        "canonicalName": "Merkle",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 323,
          "nodeType": "StructuredDocumentation",
          "src": "59:151:1",
          "text": "@notice Nascent, simple, kinda efficient (and improving!) Merkle proof generator and verifier\n @author dmfxyz\n @dev Note Generic Merkle Tree"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          339,
          856
        ],
        "name": "Merkle",
        "nameLocation": "219:6:1",
        "scope": 340,
        "usedErrors": []
      }
    ]
  },
  "id": 1
}
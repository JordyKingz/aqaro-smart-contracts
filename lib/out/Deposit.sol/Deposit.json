{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gbarVault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gbarVault",
      "outputs": [
        {
          "internalType": "contract IGBARVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gbarVault",
          "type": "address"
        }
      ],
      "name": "setGBARVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506040516107ec3803806107ec83398101604081905261002f9161010b565b610038336100bb565b600180556001600160a01b0381166100965760405162461bcd60e51b815260206004820181905260248201527f4572726f723a205661756c7420616464726573732063616e6e6f742062652030604482015260640160405180910390fd5b600380546001600160a01b0319166001600160a01b039290921691909117905561013b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561011d57600080fd5b81516001600160a01b038116811461013457600080fd5b9392505050565b6106a28061014a6000396000f3fe60806040526004361061007f5760003560e01c8063a8b5b8eb1161004e578063a8b5b8eb1461016d578063d0e30db01461018d578063e3c6052614610195578063f2fde38b146101b5576100d8565b806351cff8d9146100e8578063715018a6146100fd5780638da5cb5b146101125780639852099c14610149576100d8565b366100d85760028054906000610094836105f3565b90915550506002546040805191825234602083015233917fdb4180dac917b30af1e3b7cd73c7a8ae35b1838cb62ffcf24e2b6cc47bd73248910160405180910390a2005b60028054906000610094836105f3565b6100fb6100f636600461062f565b6101d5565b005b34801561010957600080fd5b506100fb6102d2565b34801561011e57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015557600080fd5b5061015f60025481565b604051908152602001610140565b34801561017957600080fd5b506100fb61018836600461062f565b6102e6565b6100fb610366565b3480156101a157600080fd5b5060035461012c906001600160a01b031681565b3480156101c157600080fd5b506100fb6101d036600461062f565b6104d0565b6101dd610549565b600047116102325760405162461bcd60e51b815260206004820152601960248201527f4572726f723a204e6f2065746820696e20636f6e74726163740000000000000060448201526064015b60405180910390fd5b6000816001600160a01b03164760405160006040518083038185875af1925050503d806000811461027f576040519150601f19603f3d011682016040523d82523d6000602084013e610284565b606091505b50509050806102ce5760405162461bcd60e51b8152602060048201526016602482015275115c9c9bdc8e88151c985b9cd9995c8819985a5b195960521b6044820152606401610229565b5050565b6102da610549565b6102e460006105a3565b565b6102ee610549565b6001600160a01b0381166103445760405162461bcd60e51b815260206004820181905260248201527f4572726f723a205661756c7420616464726573732063616e6e6f7420626520306044820152606401610229565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154036103b85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610229565b6002600155600354604080516337cfdcc560e11b815290516000926001600160a01b031691636f9fb98a9160048083019260209291908290030181865afa158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190610653565b116104785760405162461bcd60e51b815260206004820152601860248201527f4572726f723a204e6f2066756e647320696e207661756c7400000000000000006044820152606401610229565b60028054906000610488836105f3565b90915550506002546040805191825234602083015233917f5b063c6569a91e8133fc6cd71d31a4ca5c65c652fd53ae093f46107754f08541910160405180910390a260018055565b6104d8610549565b6001600160a01b03811661053d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610229565b610546816105a3565b50565b6000546001600160a01b031633146102e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610229565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001820161061357634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b038116811461054657600080fd5b60006020828403121561064157600080fd5b813561064c8161061a565b9392505050565b60006020828403121561066557600080fd5b505191905056fea264697066735822122099c2fae5d4b7fe06608f2ee774e36a7414dfee8507fdccd3e5d4514d219fec7264736f6c63430008100033",
    "sourceMap": "180:1353:0:-:0;;;434:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:32;719:10:40;936:18:32;:32::i;:::-;1701:1:33;1806:22;;-1:-1:-1;;;;;484:24:0;;476:69;;;;-1:-1:-1;;;476:69:0;;511:2:43;476:69:0;;;493:21:43;;;530:18;;;523:30;589:34;569:18;;;562:62;641:18;;476:69:0;;;;;;;;555:9;:34;;-1:-1:-1;;;;;;555:34:0;-1:-1:-1;;;;;555:34:0;;;;;;;;;;180:1353;;2433:187:32;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:32;;;-1:-1:-1;;;;;;2541:17:32;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:43:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:43;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:43:o;309:356::-;180:1353:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061007f5760003560e01c8063a8b5b8eb1161004e578063a8b5b8eb1461016d578063d0e30db01461018d578063e3c6052614610195578063f2fde38b146101b5576100d8565b806351cff8d9146100e8578063715018a6146100fd5780638da5cb5b146101125780639852099c14610149576100d8565b366100d85760028054906000610094836105f3565b90915550506002546040805191825234602083015233917fdb4180dac917b30af1e3b7cd73c7a8ae35b1838cb62ffcf24e2b6cc47bd73248910160405180910390a2005b60028054906000610094836105f3565b6100fb6100f636600461062f565b6101d5565b005b34801561010957600080fd5b506100fb6102d2565b34801561011e57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015557600080fd5b5061015f60025481565b604051908152602001610140565b34801561017957600080fd5b506100fb61018836600461062f565b6102e6565b6100fb610366565b3480156101a157600080fd5b5060035461012c906001600160a01b031681565b3480156101c157600080fd5b506100fb6101d036600461062f565b6104d0565b6101dd610549565b600047116102325760405162461bcd60e51b815260206004820152601960248201527f4572726f723a204e6f2065746820696e20636f6e74726163740000000000000060448201526064015b60405180910390fd5b6000816001600160a01b03164760405160006040518083038185875af1925050503d806000811461027f576040519150601f19603f3d011682016040523d82523d6000602084013e610284565b606091505b50509050806102ce5760405162461bcd60e51b8152602060048201526016602482015275115c9c9bdc8e88151c985b9cd9995c8819985a5b195960521b6044820152606401610229565b5050565b6102da610549565b6102e460006105a3565b565b6102ee610549565b6001600160a01b0381166103445760405162461bcd60e51b815260206004820181905260248201527f4572726f723a205661756c7420616464726573732063616e6e6f7420626520306044820152606401610229565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154036103b85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610229565b6002600155600354604080516337cfdcc560e11b815290516000926001600160a01b031691636f9fb98a9160048083019260209291908290030181865afa158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190610653565b116104785760405162461bcd60e51b815260206004820152601860248201527f4572726f723a204e6f2066756e647320696e207661756c7400000000000000006044820152606401610229565b60028054906000610488836105f3565b90915550506002546040805191825234602083015233917f5b063c6569a91e8133fc6cd71d31a4ca5c65c652fd53ae093f46107754f08541910160405180910390a260018055565b6104d8610549565b6001600160a01b03811661053d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610229565b610546816105a3565b50565b6000546001600160a01b031633146102e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610229565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001820161061357634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b038116811461054657600080fd5b60006020828403121561064157600080fd5b813561064c8161061a565b9392505050565b60006020828403121561066557600080fd5b505191905056fea264697066735822122099c2fae5d4b7fe06608f2ee774e36a7414dfee8507fdccd3e5d4514d219fec7264736f6c63430008100033",
    "sourceMap": "180:1353:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:9;:11;;;:9;:11;;;:::i;:::-;;;;-1:-1:-1;;674:9:0;;665:42;;;425:25:43;;;697:9:0;481:2:43;466:18;;459:34;685:10:0;;665:42;;398:18:43;665:42:0;;;;;;;180:1353;;758:9;:11;;;:9;:11;;;:::i;1067:267::-;;;;;;:::i;:::-;;:::i;:::-;;1831:101:32;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:32;1273:6;-1:-1:-1;;;;;1273:6:32;1201:85;;;-1:-1:-1;;;;;1080:32:43;;;1062:51;;1050:2;1035:18;1201:85:32;;;;;;;;231:21:0;;;;;;;;;;;;;;;;;;;1270:25:43;;;1258:2;1243:18;231:21:0;1124:177:43;1340:191:0;;;;;;;;;;-1:-1:-1;1340:191:0;;;;;:::i;:::-;;:::i;839:222::-;;;:::i;258:27::-;;;;;;;;;;-1:-1:-1;258:27:0;;;;-1:-1:-1;;;;;258:27:0;;;2081:198:32;;;;;;;;;;-1:-1:-1;2081:198:32;;;;;:::i;:::-;;:::i;1067:267:0:-;1094:13:32;:11;:13::i;:::-;1174:1:0::1;1150:21;:25;1142:63;;;::::0;-1:-1:-1;;;1142:63:0;;1995:2:43;1142:63:0::1;::::0;::::1;1977:21:43::0;2034:2;2014:18;;;2007:30;2073:27;2053:18;;;2046:55;2118:18;;1142:63:0::1;;;;;;;;;1216:12;1234:2;-1:-1:-1::0;;;;;1234:7:0::1;1249:21;1234:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1215:60;;;1293:7;1285:42;;;::::0;-1:-1:-1;;;1285:42:0;;2559:2:43;1285:42:0::1;::::0;::::1;2541:21:43::0;2598:2;2578:18;;;2571:30;-1:-1:-1;;;2617:18:43;;;2610:52;2679:18;;1285:42:0::1;2357:346:43::0;1285:42:0::1;1132:202;1067:267:::0;:::o;1831:101:32:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1340:191:0:-;1094:13:32;:11;:13::i;:::-;-1:-1:-1;;;;;1419:24:0;::::1;1411:69;;;::::0;-1:-1:-1;;;1411:69:0;;2910:2:43;1411:69:0::1;::::0;::::1;2892:21:43::0;;;2929:18;;;2922:30;2988:34;2968:18;;;2961:62;3040:18;;1411:69:0::1;2708:356:43::0;1411:69:0::1;1490:9;:34:::0;;-1:-1:-1;;;;;;1490:34:0::1;-1:-1:-1::0;;;;;1490:34:0;;;::::1;::::0;;;::::1;::::0;;1340:191::o;839:222::-;1744:1:33;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:33;;3271:2:43;2317:63:33;;;3253:21:43;3310:2;3290:18;;;3283:30;3349:33;3329:18;;;3322:61;3400:18;;2317:63:33;3069:355:43;2317:63:33;1744:1;2455:7;:18;906:9:0::1;::::0;:30:::1;::::0;;-1:-1:-1;;;906:30:0;;;;939:1:::1;::::0;-1:-1:-1;;;;;906:9:0::1;::::0;:28:::1;::::0;:30:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:9;:30:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;898:71;;;::::0;-1:-1:-1;;;898:71:0;;3820:2:43;898:71:0::1;::::0;::::1;3802:21:43::0;3859:2;3839:18;;;3832:30;3898:26;3878:18;;;3871:54;3942:18;;898:71:0::1;3618:348:43::0;898:71:0::1;979:9;:11:::0;;;:9:::1;:11;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;1021:9:0::1;::::0;1005:49:::1;::::0;;425:25:43;;;1044:9:0::1;481:2:43::0;466:18;;459:34;1032:10:0::1;::::0;1005:49:::1;::::0;398:18:43;1005:49:0::1;;;;;;;1701:1:33::0;2628:22;;839:222:0:o;2081:198:32:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:32;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:32;;4173:2:43;2161:73:32::1;::::0;::::1;4155:21:43::0;4212:2;4192:18;;;4185:30;4251:34;4231:18;;;4224:62;-1:-1:-1;;;4302:18:43;;;4295:36;4348:19;;2161:73:32::1;3971:402:43::0;2161:73:32::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:32;719:10:40;1422:23:32;1414:68;;;;-1:-1:-1;;;1414:68:32;;4580:2:43;1414:68:32;;;4562:21:43;;;4599:18;;;4592:30;4658:34;4638:18;;;4631:62;4710:18;;1414:68:32;4378:356:43;2433:187:32;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:32;;;-1:-1:-1;;;;;;2541:17:32;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:232:43:-;53:3;74:17;;;71:140;;133:10;128:3;124:20;121:1;114:31;168:4;165:1;158:15;196:4;193:1;186:15;71:140;-1:-1:-1;238:1:43;227:13;;14:232::o;504:139::-;-1:-1:-1;;;;;587:31:43;;577:42;;567:70;;633:1;630;623:12;648:263;715:6;768:2;756:9;747:7;743:23;739:32;736:52;;;784:1;781;774:12;736:52;823:9;810:23;842:39;875:5;842:39;:::i;:::-;900:5;648:263;-1:-1:-1;;;648:263:43:o;3429:184::-;3499:6;3552:2;3540:9;3531:7;3527:23;3523:32;3520:52;;;3568:1;3565;3558:12;3520:52;-1:-1:-1;3591:16:43;;3429:184;-1:-1:-1;3429:184:43:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deposit()": "d0e30db0",
    "depositId()": "9852099c",
    "gbarVault()": "e3c60526",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setGBARVault(address)": "a8b5b8eb",
    "transferOwnership(address)": "f2fde38b",
    "withdraw(address)": "51cff8d9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gbarVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gbarVault\",\"outputs\":[{\"internalType\":\"contract IGBARVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gbarVault\",\"type\":\"address\"}],\"name\":\"setGBARVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Deposit.sol\":\"Deposit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/Deposit.sol\":{\"keccak256\":\"0x13b8f117af690ce89bafaf6d6363bf6beeec35d744c084399e104e75e44fcd6d\",\"urls\":[\"bzz-raw://4431987caa47e83b765bea4a1e468831a40fcef5031c1a7feae353ec1433a680\",\"dweb:/ipfs/QmQ7qw5Ct5u3zDeNtvSQahocm4BfsxMqyiFBoL2VN2xL9e\"]},\"contracts/interfaces/IGBARVault.sol\":{\"keccak256\":\"0xbc76912ff5af9e24d0e431a1f98190ffde1d0356210de42445c35bce765fd528\",\"urls\":[\"bzz-raw://d14a75f11fc2e38315f8ed87d75a8760d006f4d701c89bb1469c9532b3b0aa5b\",\"dweb:/ipfs/QmRuxUmqvohhzVL65pBjoo48NxwLpia9hVJWhFPpzpwj3k\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_gbarVault",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DepositReceived",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Received",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depositId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gbarVault",
          "outputs": [
            {
              "internalType": "contract IGBARVault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_gbarVault",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGBARVault"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=foundry/lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Deposit.sol": "Deposit"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Deposit.sol": {
        "keccak256": "0x13b8f117af690ce89bafaf6d6363bf6beeec35d744c084399e104e75e44fcd6d",
        "urls": [
          "bzz-raw://4431987caa47e83b765bea4a1e468831a40fcef5031c1a7feae353ec1433a680",
          "dweb:/ipfs/QmQ7qw5Ct5u3zDeNtvSQahocm4BfsxMqyiFBoL2VN2xL9e"
        ],
        "license": null
      },
      "contracts/interfaces/IGBARVault.sol": {
        "keccak256": "0xbc76912ff5af9e24d0e431a1f98190ffde1d0356210de42445c35bce765fd528",
        "urls": [
          "bzz-raw://d14a75f11fc2e38315f8ed87d75a8760d006f4d701c89bb1469c9532b3b0aa5b",
          "dweb:/ipfs/QmRuxUmqvohhzVL65pBjoo48NxwLpia9hVJWhFPpzpwj3k"
        ],
        "license": null
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
        "urls": [
          "bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
          "dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Deposit.sol",
    "id": 170,
    "exportedSymbols": {
      "Context": [
        32732
      ],
      "Deposit": [
        169
      ],
      "IGBARVault": [
        1643
      ],
      "Ownable": [
        31369
      ],
      "ReentrancyGuard": [
        31409
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1534:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "0:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "25:52:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 170,
        "sourceUnit": 31370,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "78:62:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 170,
        "sourceUnit": 31410,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "141:37:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IGBARVault.sol",
        "file": "./interfaces/IGBARVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 170,
        "sourceUnit": 1644,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 169,
        "nodeType": "ContractDefinition",
        "src": "180:1353:0",
        "nodes": [
          {
            "id": 10,
            "nodeType": "VariableDeclaration",
            "src": "231:21:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "9852099c",
            "mutability": "mutable",
            "name": "depositId",
            "nameLocation": "243:9:0",
            "scope": 169,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "231:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 13,
            "nodeType": "VariableDeclaration",
            "src": "258:27:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "e3c60526",
            "mutability": "mutable",
            "name": "gbarVault",
            "nameLocation": "276:9:0",
            "scope": 169,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IGBARVault_$1643",
              "typeString": "contract IGBARVault"
            },
            "typeName": {
              "id": 12,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11,
                "name": "IGBARVault",
                "nameLocations": [
                  "258:10:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1643,
                "src": "258:10:0"
              },
              "referencedDeclaration": 1643,
              "src": "258:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGBARVault_$1643",
                "typeString": "contract IGBARVault"
              }
            },
            "visibility": "public"
          },
          {
            "id": 21,
            "nodeType": "EventDefinition",
            "src": "292:62:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "db4180dac917b30af1e3b7cd73c7a8ae35b1838cb62ffcf24e2b6cc47bd73248",
            "name": "Received",
            "nameLocation": "298:8:0",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "312:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "307:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "307:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "333:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "317:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "346:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "341:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "341:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "306:47:0"
            }
          },
          {
            "id": 29,
            "nodeType": "EventDefinition",
            "src": "359:69:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "5b063c6569a91e8133fc6cd71d31a4ca5c65c652fd53ae093f46107754f08541",
            "name": "DepositReceived",
            "nameLocation": "365:15:0",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "386:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "381:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "407:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "391:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "420:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "415:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "380:47:0"
            }
          },
          {
            "id": 51,
            "nodeType": "FunctionDefinition",
            "src": "434:162:0",
            "nodes": [],
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "466:130:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 35,
                          "name": "_gbarVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "484:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 38,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "506:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 37,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "498:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 36,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "498:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "498:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "484:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a205661756c7420616464726573732063616e6e6f742062652030",
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "510:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ddb04190464173fe92db6af9a44301d41ddb5483c17aeab97047a241427efb6",
                          "typeString": "literal_string \"Error: Vault address cannot be 0\""
                        },
                        "value": "Error: Vault address cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ddb04190464173fe92db6af9a44301d41ddb5483c17aeab97047a241427efb6",
                          "typeString": "literal_string \"Error: Vault address cannot be 0\""
                        }
                      ],
                      "id": 34,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "476:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "476:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "476:69:0"
                },
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44,
                      "name": "gbarVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "555:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGBARVault_$1643",
                        "typeString": "contract IGBARVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46,
                          "name": "_gbarVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "578:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 45,
                        "name": "IGBARVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1643,
                        "src": "567:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IGBARVault_$1643_$",
                          "typeString": "type(contract IGBARVault)"
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "567:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGBARVault_$1643",
                        "typeString": "contract IGBARVault"
                      }
                    },
                    "src": "555:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGBARVault_$1643",
                      "typeString": "contract IGBARVault"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "555:34:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_gbarVault",
                  "nameLocation": "454:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "446:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "445:20:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:0"
            },
            "scope": 169,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66,
            "nodeType": "FunctionDefinition",
            "src": "602:112:0",
            "nodes": [],
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "629:85:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "639:11:0",
                    "subExpression": {
                      "id": 54,
                      "name": "depositId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "639:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "639:11:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 58,
                        "name": "depositId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "674:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 59,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "685:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "689:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "685:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 61,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "697:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "701:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "697:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 57,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "665:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "665:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "EmitStatement",
                  "src": "660:47:0"
                }
              ]
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "609:2:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:0:0"
            },
            "scope": 169,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 81,
            "nodeType": "FunctionDefinition",
            "src": "720:113:0",
            "nodes": [],
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "748:85:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "758:11:0",
                    "subExpression": {
                      "id": 69,
                      "name": "depositId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "758:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "758:11:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 73,
                        "name": "depositId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "793:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 74,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "804:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "808:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "804:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 76,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "816:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "820:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "816:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 72,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "784:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "784:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "EmitStatement",
                  "src": "779:47:0"
                }
              ]
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "728:2:0"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:0"
            },
            "scope": 169,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 107,
            "nodeType": "FunctionDefinition",
            "src": "839:222:0",
            "nodes": [],
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "888:173:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 87,
                              "name": "gbarVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "906:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IGBARVault_$1643",
                                "typeString": "contract IGBARVault"
                              }
                            },
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "916:18:0",
                            "memberName": "getContractBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1642,
                            "src": "906:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "906:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "939:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "906:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a204e6f2066756e647320696e207661756c74",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "942:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8bfeb5b1e9957226edcdfad38da00fa915ca8cdfefb59bf1caa46b5020587eb",
                          "typeString": "literal_string \"Error: No funds in vault\""
                        },
                        "value": "Error: No funds in vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8bfeb5b1e9957226edcdfad38da00fa915ca8cdfefb59bf1caa46b5020587eb",
                          "typeString": "literal_string \"Error: No funds in vault\""
                        }
                      ],
                      "id": 86,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "898:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "898:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "898:71:0"
                },
                {
                  "expression": {
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "979:11:0",
                    "subExpression": {
                      "id": 95,
                      "name": "depositId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "979:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "979:11:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 99,
                        "name": "depositId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1021:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1032:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1036:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1032:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 102,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1044:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1048:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1044:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98,
                      "name": "DepositReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1005:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1005:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "EmitStatement",
                  "src": "1000:54:0"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 84,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 83,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "875:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31408,
                  "src": "875:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "875:12:0"
              }
            ],
            "name": "deposit",
            "nameLocation": "848:7:0",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:2:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:0"
            },
            "scope": 169,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 144,
            "nodeType": "FunctionDefinition",
            "src": "1067:267:0",
            "nodes": [],
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "1132:202:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 117,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1158:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Deposit_$169",
                                  "typeString": "contract Deposit"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Deposit_$169",
                                  "typeString": "contract Deposit"
                                }
                              ],
                              "id": 116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1150:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 115,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1150:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1150:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1164:7:0",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1150:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1174:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1150:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a204e6f2065746820696e20636f6e7472616374",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1177:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b8d61ff4a4aca6d8f3538d934fd1ccec31418ea5239658ec2988f2a91bf54df",
                          "typeString": "literal_string \"Error: No eth in contract\""
                        },
                        "value": "Error: No eth in contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b8d61ff4a4aca6d8f3538d934fd1ccec31418ea5239658ec2988f2a91bf54df",
                          "typeString": "literal_string \"Error: No eth in contract\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1142:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1142:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1142:63:0"
                },
                {
                  "assignments": [
                    126,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 126,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1221:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 143,
                      "src": "1216:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 125,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1216:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 137,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1272:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 127,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "1234:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1237:4:0",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1234:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 131,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1257:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Deposit_$169",
                                  "typeString": "contract Deposit"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Deposit_$169",
                                  "typeString": "contract Deposit"
                                }
                              ],
                              "id": 130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1249:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 129,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1249:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1249:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1263:7:0",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1249:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1234:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1234:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1215:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 139,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1293:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a205472616e73666572206661696c6564",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1302:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a881aebefa8c6a082d02014b886aedc84228fd1c8e41c2fb53ffbfb2d640ac1",
                          "typeString": "literal_string \"Error: Transfer failed\""
                        },
                        "value": "Error: Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a881aebefa8c6a082d02014b886aedc84228fd1c8e41c2fb53ffbfb2d640ac1",
                          "typeString": "literal_string \"Error: Transfer failed\""
                        }
                      ],
                      "id": 138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1285:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1285:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1285:42:0"
                }
              ]
            },
            "functionSelector": "51cff8d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 112,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 111,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1122:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31288,
                  "src": "1122:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1122:9:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1076:8:0",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1101:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1085:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1084:20:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1132:0:0"
            },
            "scope": 169,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 168,
            "nodeType": "FunctionDefinition",
            "src": "1340:191:0",
            "nodes": [],
            "body": {
              "id": 167,
              "nodeType": "Block",
              "src": "1401:130:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 152,
                          "name": "_gbarVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "1419:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1441:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1433:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 153,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1433:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1433:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1419:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a205661756c7420616464726573732063616e6e6f742062652030",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1445:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ddb04190464173fe92db6af9a44301d41ddb5483c17aeab97047a241427efb6",
                          "typeString": "literal_string \"Error: Vault address cannot be 0\""
                        },
                        "value": "Error: Vault address cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ddb04190464173fe92db6af9a44301d41ddb5483c17aeab97047a241427efb6",
                          "typeString": "literal_string \"Error: Vault address cannot be 0\""
                        }
                      ],
                      "id": 151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1411:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1411:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:69:0"
                },
                {
                  "expression": {
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 161,
                      "name": "gbarVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1490:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGBARVault_$1643",
                        "typeString": "contract IGBARVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 163,
                          "name": "_gbarVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "1513:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 162,
                        "name": "IGBARVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1643,
                        "src": "1502:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IGBARVault_$1643_$",
                          "typeString": "type(contract IGBARVault)"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1502:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGBARVault_$1643",
                        "typeString": "contract IGBARVault"
                      }
                    },
                    "src": "1490:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGBARVault_$1643",
                      "typeString": "contract IGBARVault"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "1490:34:0"
                }
              ]
            },
            "functionSelector": "a8b5b8eb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 149,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 148,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1391:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31288,
                  "src": "1391:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1391:9:0"
              }
            ],
            "name": "setGBARVault",
            "nameLocation": "1349:12:0",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "_gbarVault",
                  "nameLocation": "1370:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "1362:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1362:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1361:20:0"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1401:0:0"
            },
            "scope": 169,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Ownable",
              "nameLocations": [
                "200:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31369,
              "src": "200:7:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "200:7:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "209:15:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31409,
              "src": "209:15:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "209:15:0"
          }
        ],
        "canonicalName": "Deposit",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          169,
          31409,
          31369,
          32732
        ],
        "name": "Deposit",
        "nameLocation": "189:7:0",
        "scope": 170,
        "usedErrors": []
      }
    ]
  },
  "id": 0
}
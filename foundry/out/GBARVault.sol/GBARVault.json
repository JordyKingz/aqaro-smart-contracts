{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "gbar",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawnTo",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IGbarToken",
      "outputs": [
        {
          "internalType": "contract IGBAR",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "gbar",
          "type": "address"
        }
      ],
      "name": "setGBAR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161098538038061098583398101604081905261002f91610107565b610038336100b7565b6001600160a01b0381166100925760405162461bcd60e51b815260206004820152601f60248201527f4572726f723a204742415220616464726573732063616e6e6f74206265203000604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610137565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561011957600080fd5b81516001600160a01b038116811461013057600080fd5b9392505050565b61083f806101466000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d8578063b6b55f25146100fd578063f06753d914610110578063f2fde38b1461012357600080fd5b8063205c28781461008d5780635af3efbd146100a25780636f9fb98a146100b5578063715018a6146100d0575b600080fd5b6100a061009b366004610769565b610136565b005b6100a06100b0366004610793565b610311565b6100bd610391565b6040519081526020015b60405180910390f35b6100a0610403565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100c7565b6100a061010b3660046107b5565b610417565b6001546100e5906001600160a01b031681565b6100a0610131366004610793565b61062a565b61013e6106a3565b6001600160a01b0382166101995760405162461bcd60e51b815260206004820152601f60248201527f4572726f723a2043616e6e6f742073656e6420746f203020616464726573730060448201526064015b60405180910390fd5b6001546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156101e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020591906107ce565b10156102535760405162461bcd60e51b815260206004820181905260248201527f4572726f723a204e6f7420656e6f7567682066756e647320696e207661756c746044820152606401610190565b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156102a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ca91906107e7565b50604080516001600160a01b0384168152602081018390527fe986473adb88164a3135c0b0a057f43ec368108e4e41df874f22134ab1788022910160405180910390a15050565b6103196106a3565b6001600160a01b03811661036f5760405162461bcd60e51b815260206004820152601f60248201527f4572726f723a204742415220616464726573732063616e6e6f742062652030006044820152606401610190565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe91906107ce565b905090565b61040b6106a3565b61041560006106fd565b565b600081116104735760405162461bcd60e51b8152602060048201526024808201527f4572726f723a20416d6f756e74206d75737420626520677265617465722074686044820152630616e20360e41b6064820152608401610190565b60015481906001600160a01b031663dd62ed3e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604401602060405180830381865afa1580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f591906107ce565b101561055a5760405162461bcd60e51b815260206004820152602e60248201527f4572726f723a205472616e73666572206f6620746f6b656e20686173206e6f7460448201526d081899595b88185c1c1c9bdd995960921b6064820152608401610190565b6001546001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018490526064016020604051808303816000875af11580156105bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e391906107e7565b507f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c433604080516001600160a01b039092168252602082018490520160405180910390a150565b6106326106a3565b6001600160a01b0381166106975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610190565b6106a0816106fd565b50565b6000546001600160a01b031633146104155760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461076457600080fd5b919050565b6000806040838503121561077c57600080fd5b6107858361074d565b946020939093013593505050565b6000602082840312156107a557600080fd5b6107ae8261074d565b9392505050565b6000602082840312156107c757600080fd5b5035919050565b6000602082840312156107e057600080fd5b5051919050565b6000602082840312156107f957600080fd5b815180151581146107ae57600080fdfea2646970667358221220e272534a370f94936cb4c019d0867e0318c9113b04adee0cfff8a899372eebf064736f6c63430008100033",
    "sourceMap": "203:1624:2:-:0;;;378:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:25;719:10:33;936:18:25;:32::i;:::-;-1:-1:-1;;;;;422:18:2;;414:62;;;;-1:-1:-1;;;414:62:2;;511:2:36;414:62:2;;;493:21:36;550:2;530:18;;;523:30;589:33;569:18;;;562:61;640:18;;414:62:2;;;;;;;;486:10;:24;;-1:-1:-1;;;;;;486:24:2;-1:-1:-1;;;;;486:24:2;;;;;;;;;;203:1624;;2433:187:25;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:25;;;-1:-1:-1;;;;;;2541:17:25;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:36:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:36;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:36:o;309:355::-;203:1624:2;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d8578063b6b55f25146100fd578063f06753d914610110578063f2fde38b1461012357600080fd5b8063205c28781461008d5780635af3efbd146100a25780636f9fb98a146100b5578063715018a6146100d0575b600080fd5b6100a061009b366004610769565b610136565b005b6100a06100b0366004610793565b610311565b6100bd610391565b6040519081526020015b60405180910390f35b6100a0610403565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100c7565b6100a061010b3660046107b5565b610417565b6001546100e5906001600160a01b031681565b6100a0610131366004610793565b61062a565b61013e6106a3565b6001600160a01b0382166101995760405162461bcd60e51b815260206004820152601f60248201527f4572726f723a2043616e6e6f742073656e6420746f203020616464726573730060448201526064015b60405180910390fd5b6001546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156101e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020591906107ce565b10156102535760405162461bcd60e51b815260206004820181905260248201527f4572726f723a204e6f7420656e6f7567682066756e647320696e207661756c746044820152606401610190565b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156102a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ca91906107e7565b50604080516001600160a01b0384168152602081018390527fe986473adb88164a3135c0b0a057f43ec368108e4e41df874f22134ab1788022910160405180910390a15050565b6103196106a3565b6001600160a01b03811661036f5760405162461bcd60e51b815260206004820152601f60248201527f4572726f723a204742415220616464726573732063616e6e6f742062652030006044820152606401610190565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe91906107ce565b905090565b61040b6106a3565b61041560006106fd565b565b600081116104735760405162461bcd60e51b8152602060048201526024808201527f4572726f723a20416d6f756e74206d75737420626520677265617465722074686044820152630616e20360e41b6064820152608401610190565b60015481906001600160a01b031663dd62ed3e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604401602060405180830381865afa1580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f591906107ce565b101561055a5760405162461bcd60e51b815260206004820152602e60248201527f4572726f723a205472616e73666572206f6620746f6b656e20686173206e6f7460448201526d081899595b88185c1c1c9bdd995960921b6064820152608401610190565b6001546001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018490526064016020604051808303816000875af11580156105bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e391906107e7565b507f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c433604080516001600160a01b039092168252602082018490520160405180910390a150565b6106326106a3565b6001600160a01b0381166106975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610190565b6106a0816106fd565b50565b6000546001600160a01b031633146104155760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461076457600080fd5b919050565b6000806040838503121561077c57600080fd5b6107858361074d565b946020939093013593505050565b6000602082840312156107a557600080fd5b6107ae8261074d565b9392505050565b6000602082840312156107c757600080fd5b5035919050565b6000602082840312156107e057600080fd5b5051919050565b6000602082840312156107f957600080fd5b815180151581146107ae57600080fdfea2646970667358221220e272534a370f94936cb4c019d0867e0318c9113b04adee0cfff8a899372eebf064736f6c63430008100033",
    "sourceMap": "203:1624:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1336:320;;;;;;:::i;:::-;;:::i;:::-;;1662:163;;;;;;:::i;:::-;;:::i;581:117::-;;;:::i;:::-;;;788:25:36;;;776:2;761:18;581:117:2;;;;;;;;1831:101:25;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:25;1201:85;;;-1:-1:-1;;;;;988:32:36;;;970:51;;958:2;943:18;1201:85:25;824:203:36;807:357:2;;;;;;:::i;:::-;;:::i;251:23::-;;;;;-1:-1:-1;;;;;251:23:2;;;2081:198:25;;;;;;:::i;:::-;;:::i;1336:320:2:-;1094:13:25;:11;:13::i;:::-;-1:-1:-1;;;;;1418:16:2;::::1;1410:60;;;::::0;-1:-1:-1;;;1410:60:2;;1641:2:36;1410:60:2::1;::::0;::::1;1623:21:36::0;1680:2;1660:18;;;1653:30;1719:33;1699:18;;;1692:61;1770:18;;1410:60:2::1;;;;;;;;;1488:10;::::0;:35:::1;::::0;-1:-1:-1;;;1488:35:2;;1517:4:::1;1488:35;::::0;::::1;970:51:36::0;1527:6:2;;-1:-1:-1;;;;;1488:10:2::1;::::0;:20:::1;::::0;943:18:36;;1488:35:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;1480:90;;;::::0;-1:-1:-1;;;1480:90:2;;2190:2:36;1480:90:2::1;::::0;::::1;2172:21:36::0;;;2209:18;;;2202:30;2268:34;2248:18;;;2241:62;2320:18;;1480:90:2::1;1988:356:36::0;1480:90:2::1;1580:10;::::0;:31:::1;::::0;-1:-1:-1;;;1580:31:2;;-1:-1:-1;;;;;2541:32:36;;;1580:31:2::1;::::0;::::1;2523:51:36::0;2590:18;;;2583:34;;;1580:10:2;;::::1;::::0;:19:::1;::::0;2496:18:36;;1580:31:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1626:23:2::1;::::0;;-1:-1:-1;;;;;2541:32:36;;2523:51;;2605:2;2590:18;;2583:34;;;1626:23:2::1;::::0;2496:18:36;1626:23:2::1;;;;;;;1336:320:::0;;:::o;1662:163::-;1094:13:25;:11;:13::i;:::-;-1:-1:-1;;;;;1730:18:2;::::1;1722:62;;;::::0;-1:-1:-1;;;1722:62:2;;3112:2:36;1722:62:2::1;::::0;::::1;3094:21:36::0;3151:2;3131:18;;;3124:30;3190:33;3170:18;;;3163:61;3241:18;;1722:62:2::1;2910:355:36::0;1722:62:2::1;1794:10;:24:::0;;-1:-1:-1;;;;;;1794:24:2::1;-1:-1:-1::0;;;;;1794:24:2;;;::::1;::::0;;;::::1;::::0;;1662:163::o;581:117::-;656:10;;:35;;-1:-1:-1;;;656:35:2;;685:4;656:35;;;970:51:36;633:4:2;;-1:-1:-1;;;;;656:10:2;;:20;;943:18:36;;656:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;649:42;;581:117;:::o;1831:101:25:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;807:357:2:-;871:1;862:6;:10;854:59;;;;-1:-1:-1;;;854:59:2;;3472:2:36;854:59:2;;;3454:21:36;3511:2;3491:18;;;3484:30;3550:34;3530:18;;;3523:62;-1:-1:-1;;;3601:18:36;;;3594:34;3645:19;;854:59:2;3270:400:36;854:59:2;931:10;;984:6;;-1:-1:-1;;;;;931:10:2;:20;719:10:33;931:49:2;;-1:-1:-1;;;;;;931:49:2;;;;;;;-1:-1:-1;;;;;3905:15:36;;;931:49:2;;;3887:34:36;974:4:2;3937:18:36;;;3930:43;3822:18;;931:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;923:118;;;;-1:-1:-1;;;923:118:2;;4186:2:36;923:118:2;;;4168:21:36;4225:2;4205:18;;;4198:30;4264:34;4244:18;;;4237:62;-1:-1:-1;;;4315:18:36;;;4308:44;4369:19;;923:118:2;3984:410:36;923:118:2;1051:10;;-1:-1:-1;;;;;1051:10:2;:23;719:10:33;1051:60:2;;-1:-1:-1;;;;;;1051:60:2;;;;;;;-1:-1:-1;;;;;4657:15:36;;;1051:60:2;;;4639:34:36;1097:4:2;4689:18:36;;;4682:43;4741:18;;;4734:34;;;4574:18;;1051:60:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1126:31:2;719:10:33;1126:31:2;;;-1:-1:-1;;;;;2541:32:36;;;2523:51;;2605:2;2590:18;;2583:34;;;2496:18;1126:31:2;;;;;;;807:357;:::o;2081:198:25:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:25;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:25;;4981:2:36;2161:73:25::1;::::0;::::1;4963:21:36::0;5020:2;5000:18;;;4993:30;5059:34;5039:18;;;5032:62;-1:-1:-1;;;5110:18:36;;;5103:36;5156:19;;2161:73:25::1;4779:402:36::0;2161:73:25::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:25;719:10:33;1422:23:25;1414:68;;;;-1:-1:-1;;;1414:68:25;;5388:2:36;1414:68:25;;;5370:21:36;;;5407:18;;;5400:30;5466:34;5446:18;;;5439:62;5518:18;;1414:68:25;5186:356:36;2433:187:25;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:25;;;-1:-1:-1;;;;;;2541:17:25;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:173:36:-;82:20;;-1:-1:-1;;;;;131:31:36;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:36:o;451:186::-;510:6;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;602:29;621:9;602:29;:::i;:::-;592:39;451:186;-1:-1:-1;;;451:186:36:o;1032:180::-;1091:6;1144:2;1132:9;1123:7;1119:23;1115:32;1112:52;;;1160:1;1157;1150:12;1112:52;-1:-1:-1;1183:23:36;;1032:180;-1:-1:-1;1032:180:36:o;1799:184::-;1869:6;1922:2;1910:9;1901:7;1897:23;1893:32;1890:52;;;1938:1;1935;1928:12;1890:52;-1:-1:-1;1961:16:36;;1799:184;-1:-1:-1;1799:184:36:o;2628:277::-;2695:6;2748:2;2736:9;2727:7;2723:23;2719:32;2716:52;;;2764:1;2761;2754:12;2716:52;2796:9;2790:16;2849:5;2842:13;2835:21;2828:5;2825:32;2815:60;;2871:1;2868;2861:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IGbarToken()": "f06753d9",
    "deposit(uint256)": "b6b55f25",
    "getContractBalance()": "6f9fb98a",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setGBAR(address)": "5af3efbd",
    "transferOwnership(address)": "f2fde38b",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gbar\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawnTo\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IGbarToken\",\"outputs\":[{\"internalType\":\"contract IGBAR\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gbar\",\"type\":\"address\"}],\"name\":\"setGBAR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256)\":{\"params\":{\"amount\":\"the amount to deposit\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"the amount to send\",\"to\":\"the address to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256)\":{\"notice\":\"Deposit GBAR to the contract\"},\"getContractBalance()\":{\"notice\":\"View to get contract balance\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw specified amount of GBAR to specified address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GBARVault.sol\":\"GBARVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/GBARVault.sol\":{\"keccak256\":\"0xb1d1a457c2b4d066b2d6c55a55f7ad59b9a09a4b37591496ce93d2ea92d5b153\",\"urls\":[\"bzz-raw://550039d58d4e5375f5e7436abece280bfd5417ac4d73cad3d202dd2f43c0f22f\",\"dweb:/ipfs/QmW6db9VGhM8hk6ozvBzRy55CQJrAUCeTqPPidNkUD2Mjn\"]},\"contracts/interfaces/IGBAR.sol\":{\"keccak256\":\"0x80513892d9920cabeba6e9f6eb3635d4bde300ed3a7dce9bc233847840a3f400\",\"urls\":[\"bzz-raw://b364c3a799958efa50aad2e939e1e8fc254858ca9bb9cc599c9fdd258a097d26\",\"dweb:/ipfs/Qmawq3wQqkgdt86eimSJC3EPiBnySU3dvKgApVkwBPDn7x\"]},\"contracts/interfaces/IGBARVault.sol\":{\"keccak256\":\"0xbc76912ff5af9e24d0e431a1f98190ffde1d0356210de42445c35bce765fd528\",\"urls\":[\"bzz-raw://d14a75f11fc2e38315f8ed87d75a8760d006f4d701c89bb1469c9532b3b0aa5b\",\"dweb:/ipfs/QmRuxUmqvohhzVL65pBjoo48NxwLpia9hVJWhFPpzpwj3k\"]},\"contracts/interfaces/ILiquidityProviderStaking.sol\":{\"keccak256\":\"0xa5999e87f46bdcc6e2965fe7757042809faa08bd6879e544d041979e80926b54\",\"urls\":[\"bzz-raw://dafcc23ef179e70bb9c8f11456b3bda8c9dd7d31bcd1a4a5df34cbcd9960e2b3\",\"dweb:/ipfs/QmddpcketNYf1b4bsBKQeoMpzChq8CetR7JT72y4wTksvF\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "gbar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawnTo",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IGbarToken",
          "outputs": [
            {
              "internalType": "contract IGBAR",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getContractBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "gbar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGBAR"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(uint256)": {
            "params": {
              "amount": "the amount to deposit"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "the amount to send",
              "to": "the address to send to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deposit(uint256)": {
            "notice": "Deposit GBAR to the contract"
          },
          "getContractBalance()": {
            "notice": "View to get contract balance"
          },
          "withdrawTo(address,uint256)": {
            "notice": "Withdraw specified amount of GBAR to specified address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=foundry/lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/GBARVault.sol": "GBARVault"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/GBARVault.sol": {
        "keccak256": "0xb1d1a457c2b4d066b2d6c55a55f7ad59b9a09a4b37591496ce93d2ea92d5b153",
        "urls": [
          "bzz-raw://550039d58d4e5375f5e7436abece280bfd5417ac4d73cad3d202dd2f43c0f22f",
          "dweb:/ipfs/QmW6db9VGhM8hk6ozvBzRy55CQJrAUCeTqPPidNkUD2Mjn"
        ],
        "license": null
      },
      "contracts/interfaces/IGBAR.sol": {
        "keccak256": "0x80513892d9920cabeba6e9f6eb3635d4bde300ed3a7dce9bc233847840a3f400",
        "urls": [
          "bzz-raw://b364c3a799958efa50aad2e939e1e8fc254858ca9bb9cc599c9fdd258a097d26",
          "dweb:/ipfs/Qmawq3wQqkgdt86eimSJC3EPiBnySU3dvKgApVkwBPDn7x"
        ],
        "license": null
      },
      "contracts/interfaces/IGBARVault.sol": {
        "keccak256": "0xbc76912ff5af9e24d0e431a1f98190ffde1d0356210de42445c35bce765fd528",
        "urls": [
          "bzz-raw://d14a75f11fc2e38315f8ed87d75a8760d006f4d701c89bb1469c9532b3b0aa5b",
          "dweb:/ipfs/QmRuxUmqvohhzVL65pBjoo48NxwLpia9hVJWhFPpzpwj3k"
        ],
        "license": null
      },
      "contracts/interfaces/ILiquidityProviderStaking.sol": {
        "keccak256": "0xa5999e87f46bdcc6e2965fe7757042809faa08bd6879e544d041979e80926b54",
        "urls": [
          "bzz-raw://dafcc23ef179e70bb9c8f11456b3bda8c9dd7d31bcd1a4a5df34cbcd9960e2b3",
          "dweb:/ipfs/QmddpcketNYf1b4bsBKQeoMpzChq8CetR7JT72y4wTksvF"
        ],
        "license": null
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/GBARVault.sol",
    "id": 1409,
    "exportedSymbols": {
      "Context": [
        29576
      ],
      "GBARVault": [
        1408
      ],
      "IERC20": [
        28917
      ],
      "IGBAR": [
        1445
      ],
      "IGBARVault": [
        1465
      ],
      "ILiquidityProviderStaking": [
        1490
      ],
      "Ownable": [
        28213
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1827:2",
    "nodes": [
      {
        "id": 1230,
        "nodeType": "PragmaDirective",
        "src": "0:23:2",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 1231,
        "nodeType": "ImportDirective",
        "src": "25:32:2",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IGBAR.sol",
        "file": "./interfaces/IGBAR.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1409,
        "sourceUnit": 1446,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1232,
        "nodeType": "ImportDirective",
        "src": "58:52:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1409,
        "sourceUnit": 28214,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1233,
        "nodeType": "ImportDirective",
        "src": "111:52:2",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ILiquidityProviderStaking.sol",
        "file": "./interfaces/ILiquidityProviderStaking.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1409,
        "sourceUnit": 1491,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1234,
        "nodeType": "ImportDirective",
        "src": "164:37:2",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IGBARVault.sol",
        "file": "./interfaces/IGBARVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1409,
        "sourceUnit": 1466,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1408,
        "nodeType": "ContractDefinition",
        "src": "203:1624:2",
        "nodes": [
          {
            "id": 1241,
            "nodeType": "VariableDeclaration",
            "src": "251:23:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "f06753d9",
            "mutability": "mutable",
            "name": "IGbarToken",
            "nameLocation": "264:10:2",
            "scope": 1408,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IGBAR_$1445",
              "typeString": "contract IGBAR"
            },
            "typeName": {
              "id": 1240,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1239,
                "name": "IGBAR",
                "nameLocations": [
                  "251:5:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1445,
                "src": "251:5:2"
              },
              "referencedDeclaration": 1445,
              "src": "251:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGBAR_$1445",
                "typeString": "contract IGBAR"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1247,
            "nodeType": "EventDefinition",
            "src": "281:43:2",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e986473adb88164a3135c0b0a057f43ec368108e4e41df874f22134ab1788022",
            "name": "WithdrawnTo",
            "nameLocation": "287:11:2",
            "parameters": {
              "id": 1246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1243,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "307:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "299:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "299:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1245,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "316:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "311:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1244,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "311:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "298:25:2"
            }
          },
          {
            "id": 1253,
            "nodeType": "EventDefinition",
            "src": "329:43:2",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4",
            "name": "Deposited",
            "nameLocation": "335:9:2",
            "parameters": {
              "id": 1252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1249,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "353:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1253,
                  "src": "345:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1251,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "364:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1253,
                  "src": "359:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1250,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "344:27:2"
            }
          },
          {
            "id": 1275,
            "nodeType": "FunctionDefinition",
            "src": "378:139:2",
            "nodes": [],
            "body": {
              "id": 1274,
              "nodeType": "Block",
              "src": "404:113:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1259,
                          "name": "gbar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1255,
                          "src": "422:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "438:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "430:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1260,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "430:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "430:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "422:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a204742415220616464726573732063616e6e6f742062652030",
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "442:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81ecde45c754a927825c12ae1b00516c8a59270bf6af09924ac92da08baa0dd9",
                          "typeString": "literal_string \"Error: GBAR address cannot be 0\""
                        },
                        "value": "Error: GBAR address cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81ecde45c754a927825c12ae1b00516c8a59270bf6af09924ac92da08baa0dd9",
                          "typeString": "literal_string \"Error: GBAR address cannot be 0\""
                        }
                      ],
                      "id": 1258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "414:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "414:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1267,
                  "nodeType": "ExpressionStatement",
                  "src": "414:62:2"
                },
                {
                  "expression": {
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1268,
                      "name": "IGbarToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1241,
                      "src": "486:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGBAR_$1445",
                        "typeString": "contract IGBAR"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1270,
                          "name": "gbar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1255,
                          "src": "505:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1269,
                        "name": "IGBAR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1445,
                        "src": "499:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IGBAR_$1445_$",
                          "typeString": "type(contract IGBAR)"
                        }
                      },
                      "id": 1271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "499:11:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGBAR_$1445",
                        "typeString": "contract IGBAR"
                      }
                    },
                    "src": "486:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGBAR_$1445",
                      "typeString": "contract IGBAR"
                    }
                  },
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "486:24:2"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "gbar",
                  "nameLocation": "398:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "390:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "390:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "389:14:2"
            },
            "returnParameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:0:2"
            },
            "scope": 1408,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1290,
            "nodeType": "FunctionDefinition",
            "src": "581:117:2",
            "nodes": [],
            "body": {
              "id": 1289,
              "nodeType": "Block",
              "src": "639:59:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1285,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "685:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GBARVault_$1408",
                              "typeString": "contract GBARVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GBARVault_$1408",
                              "typeString": "contract GBARVault"
                            }
                          ],
                          "id": 1284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "677:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "677:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "677:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1281,
                        "name": "IGbarToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "656:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGBAR_$1445",
                          "typeString": "contract IGBAR"
                        }
                      },
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "667:9:2",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28874,
                      "src": "656:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "656:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1280,
                  "id": 1288,
                  "nodeType": "Return",
                  "src": "649:42:2"
                }
              ]
            },
            "baseFunctions": [
              1464
            ],
            "documentation": {
              "id": 1276,
              "nodeType": "StructuredDocumentation",
              "src": "523:53:2",
              "text": " @notice View to get contract balance"
            },
            "functionSelector": "6f9fb98a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nameLocation": "590:18:2",
            "parameters": {
              "id": 1277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "608:2:2"
            },
            "returnParameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1279,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1290,
                  "src": "633:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1278,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "632:6:2"
            },
            "scope": 1408,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1337,
            "nodeType": "FunctionDefinition",
            "src": "807:357:2",
            "nodes": [],
            "body": {
              "id": 1336,
              "nodeType": "Block",
              "src": "844:320:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1297,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "862:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "871:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "862:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a20416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 1300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "874:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50182549f8ea68c02c88ed5994b93caddf8e5fe0e38665672ebd3a2ce8d3e871",
                          "typeString": "literal_string \"Error: Amount must be greater than 0\""
                        },
                        "value": "Error: Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50182549f8ea68c02c88ed5994b93caddf8e5fe0e38665672ebd3a2ce8d3e871",
                          "typeString": "literal_string \"Error: Amount must be greater than 0\""
                        }
                      ],
                      "id": 1296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "854:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "854:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1302,
                  "nodeType": "ExpressionStatement",
                  "src": "854:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1306,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29566,
                                "src": "952:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "952:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1310,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "974:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GBARVault_$1408",
                                    "typeString": "contract GBARVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GBARVault_$1408",
                                    "typeString": "contract GBARVault"
                                  }
                                ],
                                "id": 1309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "966:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1308,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "966:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "966:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1304,
                              "name": "IGbarToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1241,
                              "src": "931:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IGBAR_$1445",
                                "typeString": "contract IGBAR"
                              }
                            },
                            "id": 1305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "942:9:2",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28894,
                            "src": "931:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "931:49:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1313,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "984:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "931:59:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a205472616e73666572206f6620746f6b656e20686173206e6f74206265656e20617070726f766564",
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "992:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8993923e174575a5c82a776dfbbd76444aa5c47975c0c61c24e83134e0d9d3db",
                          "typeString": "literal_string \"Error: Transfer of token has not been approved\""
                        },
                        "value": "Error: Transfer of token has not been approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8993923e174575a5c82a776dfbbd76444aa5c47975c0c61c24e83134e0d9d3db",
                          "typeString": "literal_string \"Error: Transfer of token has not been approved\""
                        }
                      ],
                      "id": 1303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "923:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:118:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1317,
                  "nodeType": "ExpressionStatement",
                  "src": "923:118:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1321,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29566,
                          "src": "1075:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1075:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1325,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1097:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GBARVault_$1408",
                              "typeString": "contract GBARVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GBARVault_$1408",
                              "typeString": "contract GBARVault"
                            }
                          ],
                          "id": 1324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1089:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1323,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1089:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1089:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1327,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1293,
                        "src": "1104:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1318,
                        "name": "IGbarToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "1051:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGBAR_$1445",
                          "typeString": "contract IGBAR"
                        }
                      },
                      "id": 1320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1062:12:2",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28916,
                      "src": "1051:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1329,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:60:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1331,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29566,
                          "src": "1136:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1136:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1333,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1293,
                        "src": "1150:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1330,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1253,
                      "src": "1126:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1335,
                  "nodeType": "EmitStatement",
                  "src": "1121:36:2"
                }
              ]
            },
            "baseFunctions": [
              1459
            ],
            "documentation": {
              "id": 1291,
              "nodeType": "StructuredDocumentation",
              "src": "704:98:2",
              "text": " @notice Deposit GBAR to the contract\n @param amount the amount to deposit"
            },
            "functionSelector": "b6b55f25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "816:7:2",
            "parameters": {
              "id": 1294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1293,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "829:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "824:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1292,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "823:13:2"
            },
            "returnParameters": {
              "id": 1295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:2"
            },
            "scope": 1408,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1383,
            "nodeType": "FunctionDefinition",
            "src": "1336:320:2",
            "nodes": [],
            "body": {
              "id": 1382,
              "nodeType": "Block",
              "src": "1400:256:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1348,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1340,
                          "src": "1418:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1432:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1424:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1349,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1424:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1424:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1418:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a2043616e6e6f742073656e6420746f20302061646472657373",
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1436:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a39a7d67428372ab5a06f04d895be882480f3736ab6f45df5b9ffc136a44df0e",
                          "typeString": "literal_string \"Error: Cannot send to 0 address\""
                        },
                        "value": "Error: Cannot send to 0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a39a7d67428372ab5a06f04d895be882480f3736ab6f45df5b9ffc136a44df0e",
                          "typeString": "literal_string \"Error: Cannot send to 0 address\""
                        }
                      ],
                      "id": 1347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1410:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1410:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1356,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:60:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1362,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1517:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GBARVault_$1408",
                                    "typeString": "contract GBARVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GBARVault_$1408",
                                    "typeString": "contract GBARVault"
                                  }
                                ],
                                "id": 1361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1509:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1360,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1509:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1509:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1358,
                              "name": "IGbarToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1241,
                              "src": "1488:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IGBAR_$1445",
                                "typeString": "contract IGBAR"
                              }
                            },
                            "id": 1359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1499:9:2",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28874,
                            "src": "1488:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1488:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1365,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1342,
                          "src": "1527:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1488:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a204e6f7420656e6f7567682066756e647320696e207661756c74",
                        "id": 1367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1535:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edc6e9f5913e89809fa5eccbef6fa3094de0866f3ccc6172154e30dc4ce6bb12",
                          "typeString": "literal_string \"Error: Not enough funds in vault\""
                        },
                        "value": "Error: Not enough funds in vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_edc6e9f5913e89809fa5eccbef6fa3094de0866f3ccc6172154e30dc4ce6bb12",
                          "typeString": "literal_string \"Error: Not enough funds in vault\""
                        }
                      ],
                      "id": 1357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1480:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1480:90:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1369,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:90:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1373,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1340,
                        "src": "1600:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1374,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1342,
                        "src": "1604:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1370,
                        "name": "IGbarToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "1580:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGBAR_$1445",
                          "typeString": "contract IGBAR"
                        }
                      },
                      "id": 1372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1591:8:2",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28884,
                      "src": "1580:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1580:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1376,
                  "nodeType": "ExpressionStatement",
                  "src": "1580:31:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1378,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1340,
                        "src": "1638:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1379,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1342,
                        "src": "1642:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1377,
                      "name": "WithdrawnTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1247,
                      "src": "1626:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1626:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1381,
                  "nodeType": "EmitStatement",
                  "src": "1621:28:2"
                }
              ]
            },
            "baseFunctions": [
              1454
            ],
            "documentation": {
              "id": 1338,
              "nodeType": "StructuredDocumentation",
              "src": "1170:161:2",
              "text": " @notice Withdraw specified amount of GBAR to specified address\n @param to the address to send to\n @param amount the amount to send"
            },
            "functionSelector": "205c2878",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1345,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1344,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1390:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28132,
                  "src": "1390:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1390:9:2"
              }
            ],
            "name": "withdrawTo",
            "nameLocation": "1345:10:2",
            "parameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1340,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1364:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1383,
                  "src": "1356:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1342,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1373:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1383,
                  "src": "1368:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1341,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1355:25:2"
            },
            "returnParameters": {
              "id": 1346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1400:0:2"
            },
            "scope": 1408,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1407,
            "nodeType": "FunctionDefinition",
            "src": "1662:163:2",
            "nodes": [],
            "body": {
              "id": 1406,
              "nodeType": "Block",
              "src": "1712:113:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1391,
                          "name": "gbar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1385,
                          "src": "1730:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1746:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1738:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1392,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1738:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1738:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1730:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f723a204742415220616464726573732063616e6e6f742062652030",
                        "id": 1397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1750:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81ecde45c754a927825c12ae1b00516c8a59270bf6af09924ac92da08baa0dd9",
                          "typeString": "literal_string \"Error: GBAR address cannot be 0\""
                        },
                        "value": "Error: GBAR address cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81ecde45c754a927825c12ae1b00516c8a59270bf6af09924ac92da08baa0dd9",
                          "typeString": "literal_string \"Error: GBAR address cannot be 0\""
                        }
                      ],
                      "id": 1390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1722:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1722:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1399,
                  "nodeType": "ExpressionStatement",
                  "src": "1722:62:2"
                },
                {
                  "expression": {
                    "id": 1404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1400,
                      "name": "IGbarToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1241,
                      "src": "1794:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGBAR_$1445",
                        "typeString": "contract IGBAR"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1402,
                          "name": "gbar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1385,
                          "src": "1813:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1401,
                        "name": "IGBAR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1445,
                        "src": "1807:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IGBAR_$1445_$",
                          "typeString": "type(contract IGBAR)"
                        }
                      },
                      "id": 1403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1807:11:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGBAR_$1445",
                        "typeString": "contract IGBAR"
                      }
                    },
                    "src": "1794:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGBAR_$1445",
                      "typeString": "contract IGBAR"
                    }
                  },
                  "id": 1405,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:24:2"
                }
              ]
            },
            "functionSelector": "5af3efbd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1388,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1387,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1702:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28132,
                  "src": "1702:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1702:9:2"
              }
            ],
            "name": "setGBAR",
            "nameLocation": "1671:7:2",
            "parameters": {
              "id": 1386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1385,
                  "mutability": "mutable",
                  "name": "gbar",
                  "nameLocation": "1687:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1407,
                  "src": "1679:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1678:14:2"
            },
            "returnParameters": {
              "id": 1389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1712:0:2"
            },
            "scope": 1408,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1235,
              "name": "IGBARVault",
              "nameLocations": [
                "225:10:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1465,
              "src": "225:10:2"
            },
            "id": 1236,
            "nodeType": "InheritanceSpecifier",
            "src": "225:10:2"
          },
          {
            "baseName": {
              "id": 1237,
              "name": "Ownable",
              "nameLocations": [
                "237:7:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28213,
              "src": "237:7:2"
            },
            "id": 1238,
            "nodeType": "InheritanceSpecifier",
            "src": "237:7:2"
          }
        ],
        "canonicalName": "GBARVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1408,
          28213,
          29576,
          1465
        ],
        "name": "GBARVault",
        "nameLocation": "212:9:2",
        "scope": 1409,
        "usedErrors": []
      }
    ]
  },
  "id": 2
}
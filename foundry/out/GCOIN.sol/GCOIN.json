{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityStakingAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "liqStaking",
          "type": "address"
        }
      ],
      "name": "setLiqStakingAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "liquidityProvider",
          "type": "address"
        }
      ],
      "name": "stakeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060408051808201825260058082526423a1a7a4a760d91b60208084018290528451808601909552918452908301529060036200004f83826200017c565b5060046200005e82826200017c565b5050506200007b620000756200008160201b60201c565b62000085565b62000248565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200010257607f821691505b6020821081036200012357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017757600081815260208120601f850160051c81016020861015620001525750805b601f850160051c820191505b8181101562000173578281556001016200015e565b5050505b505050565b81516001600160401b03811115620001985762000198620000d7565b620001b081620001a98454620000ed565b8462000129565b602080601f831160018114620001e85760008415620001cf5750858301515b600019600386901b1c1916600185901b17855562000173565b600085815260208120601f198616915b828110156200021957888601518255948401946001909101908401620001f8565b5085821015620002385787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610e0c80620002586000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d71461023a578063a9059cbb1461024d578063dd62ed3e14610260578063f2fde38b14610273578063f366c6a61461028657600080fd5b8063715018a6146101f45780638da5cb5b146101fc57806395d89b41146102215780639cd321ad1461022957600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce5671461019657806339509351146101a557806340c10f19146101b857806370a08231146101cb57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c5780631d6a97571461016e575b600080fd5b610123610299565b6040516101309190610c33565b60405180910390f35b61014c610147366004610c9d565b61032b565b6040519015158152602001610130565b6002545b604051908152602001610130565b61018161017c366004610cc7565b610345565b005b61014c610191366004610cf3565b6104e7565b60405160008152602001610130565b61014c6101b3366004610c9d565b61050b565b61014c6101c6366004610c9d565b61052d565b6101606101d9366004610d2f565b6001600160a01b031660009081526020819052604090205490565b61018161054a565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610130565b61012361055e565b6006546001600160a01b0316610209565b61014c610248366004610c9d565b61056d565b61014c61025b366004610c9d565b6105e8565b61016061026e366004610d51565b6105f6565b610181610281366004610d2f565b610621565b610181610294366004610d2f565b61069a565b6060600380546102a890610d7b565b80601f01602080910402602001604051908101604052809291908181526020018280546102d490610d7b565b80156103215780601f106102f657610100808354040283529160200191610321565b820191906000526020600020905b81548152906001019060200180831161030457829003601f168201915b5050505050905090565b60003361033981858561072e565b60019150505b92915050565b61034d610852565b6006546001600160a01b03166103b45760405162461bcd60e51b815260206004820152602160248201527f4c6971756964697479207374616b696e672061646472657373206e6f742073656044820152601d60fa1b60648201526084015b60405180910390fd5b6001600160a01b03811661040a5760405162461bcd60e51b815260206004820152601c60248201527f4572726f72206d696e74696e6720746f2061646472657373202830290000000060448201526064016103ab565b61041430836108ac565b60065460009061042d906001600160a01b03168461098b565b90508061047c5760405162461bcd60e51b815260206004820152601760248201527f617070726f76655374616b654d696e74206661696c656400000000000000000060448201526064016103ab565b600654604051635a408df360e11b8152600481018590526001600160a01b0384811660248301529091169063b4811be690604401600060405180830381600087803b1580156104ca57600080fd5b505af11580156104de573d6000803e3d6000fd5b50505050505050565b6000336104f5858285610999565b610500858585610a13565b506001949350505050565b60003361033981858561051e83836105f6565b6105289190610db5565b61072e565b6000610537610852565b61054183836108ac565b50600192915050565b610552610852565b61055c6000610be1565b565b6060600480546102a890610d7b565b6000338161057b82866105f6565b9050838110156105db5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103ab565b610500828686840361072e565b600033610339818585610a13565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610629610852565b6001600160a01b03811661068e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ab565b61069781610be1565b50565b6106a2610852565b6001600160a01b03811661070c5760405162461bcd60e51b815260206004820152602b60248201527f4572726f722073657474696e67206c6971756964697479207374616b696e672060448201526a616464726573732028302960a81b60648201526084016103ab565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166107905760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ab565b6001600160a01b0382166107f15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ab565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b0316331461055c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ab565b6001600160a01b0382166109025760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103ab565b80600260008282546109149190610db5565b90915550506001600160a01b03821660009081526020819052604081208054839290610941908490610db5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60003061033981858561072e565b60006109a584846105f6565b90506000198114610a0d5781811015610a005760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103ab565b610a0d848484840361072e565b50505050565b6001600160a01b038316610a775760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ab565b6001600160a01b038216610ad95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ab565b6001600160a01b03831660009081526020819052604090205481811015610b515760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103ab565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b88908490610db5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bd491815260200190565b60405180910390a3610a0d565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610c6057858101830151858201604001528201610c44565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c9857600080fd5b919050565b60008060408385031215610cb057600080fd5b610cb983610c81565b946020939093013593505050565b60008060408385031215610cda57600080fd5b82359150610cea60208401610c81565b90509250929050565b600080600060608486031215610d0857600080fd5b610d1184610c81565b9250610d1f60208501610c81565b9150604084013590509250925092565b600060208284031215610d4157600080fd5b610d4a82610c81565b9392505050565b60008060408385031215610d6457600080fd5b610d6d83610c81565b9150610cea60208401610c81565b600181811c90821680610d8f57607f821691505b602082108103610daf57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561033f57634e487b7160e01b600052601160045260246000fdfea2646970667358221220bff30a58aa1604a4edb9d3e6d7494b41f5394781ce1da9a07b7edd78a5d2785164736f6c63430008100033",
    "sourceMap": "188:3272:1:-:0;;;285:40;;;;;;;;;-1:-1:-1;1978:113:28;;;;;;;;;;;;-1:-1:-1;;;1978:113:28;;;;;;;;;;;;;;;;;;;;;;;2044:5;:13;1978:113;2044:5;:13;:::i;:::-;-1:-1:-1;2067:7:28;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;936:32:26;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;188:3272:1;;640:96:34;719:10;;640:96::o;2433:187:26:-;2525:6;;;-1:-1:-1;;;;;2541:17:26;;;-1:-1:-1;;;;;;2541:17:26;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:37:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:37;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:37;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:37;;;2580:26;2531:89;-1:-1:-1;;1335:1:37;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:37;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:37;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:37;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:37:o;:::-;188:3272:1;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d71461023a578063a9059cbb1461024d578063dd62ed3e14610260578063f2fde38b14610273578063f366c6a61461028657600080fd5b8063715018a6146101f45780638da5cb5b146101fc57806395d89b41146102215780639cd321ad1461022957600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce5671461019657806339509351146101a557806340c10f19146101b857806370a08231146101cb57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c5780631d6a97571461016e575b600080fd5b610123610299565b6040516101309190610c33565b60405180910390f35b61014c610147366004610c9d565b61032b565b6040519015158152602001610130565b6002545b604051908152602001610130565b61018161017c366004610cc7565b610345565b005b61014c610191366004610cf3565b6104e7565b60405160008152602001610130565b61014c6101b3366004610c9d565b61050b565b61014c6101c6366004610c9d565b61052d565b6101606101d9366004610d2f565b6001600160a01b031660009081526020819052604090205490565b61018161054a565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610130565b61012361055e565b6006546001600160a01b0316610209565b61014c610248366004610c9d565b61056d565b61014c61025b366004610c9d565b6105e8565b61016061026e366004610d51565b6105f6565b610181610281366004610d2f565b610621565b610181610294366004610d2f565b61069a565b6060600380546102a890610d7b565b80601f01602080910402602001604051908101604052809291908181526020018280546102d490610d7b565b80156103215780601f106102f657610100808354040283529160200191610321565b820191906000526020600020905b81548152906001019060200180831161030457829003601f168201915b5050505050905090565b60003361033981858561072e565b60019150505b92915050565b61034d610852565b6006546001600160a01b03166103b45760405162461bcd60e51b815260206004820152602160248201527f4c6971756964697479207374616b696e672061646472657373206e6f742073656044820152601d60fa1b60648201526084015b60405180910390fd5b6001600160a01b03811661040a5760405162461bcd60e51b815260206004820152601c60248201527f4572726f72206d696e74696e6720746f2061646472657373202830290000000060448201526064016103ab565b61041430836108ac565b60065460009061042d906001600160a01b03168461098b565b90508061047c5760405162461bcd60e51b815260206004820152601760248201527f617070726f76655374616b654d696e74206661696c656400000000000000000060448201526064016103ab565b600654604051635a408df360e11b8152600481018590526001600160a01b0384811660248301529091169063b4811be690604401600060405180830381600087803b1580156104ca57600080fd5b505af11580156104de573d6000803e3d6000fd5b50505050505050565b6000336104f5858285610999565b610500858585610a13565b506001949350505050565b60003361033981858561051e83836105f6565b6105289190610db5565b61072e565b6000610537610852565b61054183836108ac565b50600192915050565b610552610852565b61055c6000610be1565b565b6060600480546102a890610d7b565b6000338161057b82866105f6565b9050838110156105db5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103ab565b610500828686840361072e565b600033610339818585610a13565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610629610852565b6001600160a01b03811661068e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ab565b61069781610be1565b50565b6106a2610852565b6001600160a01b03811661070c5760405162461bcd60e51b815260206004820152602b60248201527f4572726f722073657474696e67206c6971756964697479207374616b696e672060448201526a616464726573732028302960a81b60648201526084016103ab565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166107905760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ab565b6001600160a01b0382166107f15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ab565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b0316331461055c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ab565b6001600160a01b0382166109025760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103ab565b80600260008282546109149190610db5565b90915550506001600160a01b03821660009081526020819052604081208054839290610941908490610db5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60003061033981858561072e565b60006109a584846105f6565b90506000198114610a0d5781811015610a005760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103ab565b610a0d848484840361072e565b50505050565b6001600160a01b038316610a775760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ab565b6001600160a01b038216610ad95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ab565b6001600160a01b03831660009081526020819052604090205481811015610b515760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103ab565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b88908490610db5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bd491815260200190565b60405180910390a3610a0d565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610c6057858101830151858201604001528201610c44565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c9857600080fd5b919050565b60008060408385031215610cb057600080fd5b610cb983610c81565b946020939093013593505050565b60008060408385031215610cda57600080fd5b82359150610cea60208401610c81565b90509250929050565b600080600060608486031215610d0857600080fd5b610d1184610c81565b9250610d1f60208501610c81565b9150604084013590509250925092565b600060208284031215610d4157600080fd5b610d4a82610c81565b9392505050565b60008060408385031215610d6457600080fd5b610d6d83610c81565b9150610cea60208401610c81565b600181811c90821680610d8f57607f821691505b602082108103610daf57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561033f57634e487b7160e01b600052601160045260246000fdfea2646970667358221220bff30a58aa1604a4edb9d3e6d7494b41f5394781ce1da9a07b7edd78a5d2785164736f6c63430008100033",
    "sourceMap": "188:3272:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:37;;1162:22;1144:41;;1132:2;1117:18;4433:197:28;1004:187:37;3244:106:28;3331:12;;3244:106;;;1342:25:37;;;1330:2;1315:18;3244:106:28;1196:177:37;1894:498:1;;;;;;:::i;:::-;;:::i;:::-;;5192:286:28;;;;;;:::i;:::-;;:::i;569:82:1:-;;;619:5;2112:36:37;;2100:2;2085:18;569:82:1;1970:184:37;5873:234:28;;;;;;:::i;:::-;;:::i;1388:136:1:-;;;;;;:::i;:::-;;:::i;3408:125:28:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:28;3482:7;3508:18;;;;;;;;;;;;3408:125;1831:101:26;;;:::i;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:26;1201:85;;;-1:-1:-1;;;;;2514:32:37;;;2496:51;;2484:2;2469:18;1201:85:26;2350:203:37;2367:102:28;;;:::i;761:117:1:-;853:17;;-1:-1:-1;;;;;853:17:1;761:117;;6594:427:28;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2081:198:26:-;;;;;;:::i;:::-;;:::i;2655:233:1:-;;;;;;:::i;:::-;;:::i;2156:98:28:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:34;4570:32:28;719:10:34;4586:7:28;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;1894:498:1:-;1094:13:26;:11;:13::i;:::-;1998:17:1::1;::::0;-1:-1:-1;;;;;1998:17:1::1;1982:86;;;::::0;-1:-1:-1;;;1982:86:1;;3410:2:37;1982:86:1::1;::::0;::::1;3392:21:37::0;3449:2;3429:18;;;3422:30;3488:34;3468:18;;;3461:62;-1:-1:-1;;;3539:18:37;;;3532:31;3580:19;;1982:86:1::1;;;;;;;;;-1:-1:-1::0;;;;;2086:31:1;::::1;2078:72;;;::::0;-1:-1:-1;;;2078:72:1;;3812:2:37;2078:72:1::1;::::0;::::1;3794:21:37::0;3851:2;3831:18;;;3824:30;3890;3870:18;;;3863:58;3938:18;;2078:72:1::1;3610:352:37::0;2078:72:1::1;2160:28;2174:4;2181:6;2160:5;:28::i;:::-;2241:17;::::0;2199:12:::1;::::0;2215:53:::1;::::0;-1:-1:-1;;;;;2241:17:1::1;2261:6:::0;2215:17:::1;:53::i;:::-;2198:70;;2286:7;2278:43;;;::::0;-1:-1:-1;;;2278:43:1;;4169:2:37;2278:43:1::1;::::0;::::1;4151:21:37::0;4208:2;4188:18;;;4181:30;4247:25;4227:18;;;4220:53;4290:18;;2278:43:1::1;3967:347:37::0;2278:43:1::1;2331:17;::::0;:54:::1;::::0;-1:-1:-1;;;2331:54:1;;::::1;::::0;::::1;4493:25:37::0;;;-1:-1:-1;;;;;4554:32:37;;;4534:18;;;4527:60;2331:17:1;;::::1;::::0;:27:::1;::::0;4466:18:37;;2331:54:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1972:420;1894:498:::0;;:::o;5192:286:28:-;5319:4;719:10:34;5375:38:28;5391:4;719:10:34;5406:6:28;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:28;;5192:286;-1:-1:-1;;;;5192:286:28:o;5873:234::-;5961:4;719:10:34;6015:64:28;719:10:34;6031:7:28;6068:10;6040:25;719:10:34;6031:7:28;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;1388:136:1:-;1455:4;1094:13:26;:11;:13::i;:::-;1479:17:1::1;1485:2;1489:6;1479:5;:17::i;:::-;-1:-1:-1::0;1513:4:1::1;1388:136:::0;;;;:::o;1831:101:26:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2367:102:28:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:34;6687:4:28;6768:25;719:10:34;6785:7:28;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:28;;5027:2:37;6803:85:28;;;5009:21:37;5066:2;5046:18;;;5039:30;5105:34;5085:18;;;5078:62;-1:-1:-1;;;5156:18:37;;;5149:35;5201:19;;6803:85:28;4825:401:37;6803:85:28;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:34;3862:28:28;719:10:34;3879:2:28;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:28;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;2081:198:26:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:26;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:26;;5433:2:37;2161:73:26::1;::::0;::::1;5415:21:37::0;5472:2;5452:18;;;5445:30;5511:34;5491:18;;;5484:62;-1:-1:-1;;;5562:18:37;;;5555:36;5608:19;;2161:73:26::1;5231:402:37::0;2161:73:26::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2655:233:1:-;1094:13:26;:11;:13::i;:::-;-1:-1:-1;;;;;2742:24:1;::::1;2734:80;;;::::0;-1:-1:-1;;;2734:80:1;;5840:2:37;2734:80:1::1;::::0;::::1;5822:21:37::0;5879:2;5859:18;;;5852:30;5918:34;5898:18;;;5891:62;-1:-1:-1;;;5969:18:37;;;5962:41;6020:19;;2734:80:1::1;5638:407:37::0;2734:80:1::1;2824:17;:57:::0;;-1:-1:-1;;;;;;2824:57:1::1;-1:-1:-1::0;;;;;2824:57:1;;;::::1;::::0;;;::::1;::::0;;2655:233::o;10110:370:28:-;-1:-1:-1;;;;;10241:19:28;;10233:68;;;;-1:-1:-1;;;10233:68:28;;6252:2:37;10233:68:28;;;6234:21:37;6291:2;6271:18;;;6264:30;6330:34;6310:18;;;6303:62;-1:-1:-1;;;6381:18:37;;;6374:34;6425:19;;10233:68:28;6050:400:37;10233:68:28;-1:-1:-1;;;;;10319:21:28;;10311:68;;;;-1:-1:-1;;;10311:68:28;;6657:2:37;10311:68:28;;;6639:21:37;6696:2;6676:18;;;6669:30;6735:34;6715:18;;;6708:62;-1:-1:-1;;;6786:18:37;;;6779:32;6828:19;;10311:68:28;6455:398:37;10311:68:28;-1:-1:-1;;;;;10390:18:28;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1342:25:37;;;10441:32:28;;1315:18:37;10441:32:28;;;;;;;10110:370;;;:::o;1359:130:26:-;1273:6;;-1:-1:-1;;;;;1273:6:26;719:10:34;1422:23:26;1414:68;;;;-1:-1:-1;;;1414:68:26;;7060:2:37;1414:68:26;;;7042:21:37;;;7079:18;;;7072:30;7138:34;7118:18;;;7111:62;7190:18;;1414:68:26;6858:356:37;8402:389:28;-1:-1:-1;;;;;8485:21:28;;8477:65;;;;-1:-1:-1;;;8477:65:28;;7421:2:37;8477:65:28;;;7403:21:37;7460:2;7440:18;;;7433:30;7499:33;7479:18;;;7472:61;7550:18;;8477:65:28;7219:355:37;8477:65:28;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:28;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:28;;1342:25:37;;;-1:-1:-1;;;;;8688:37:28;;;8705:1;;8688:37;;1330:2:37;1315:18;8688:37:28;;;;;;;8402:389;;:::o;3265:193:1:-;3343:4;3383;3398:32;3383:4;3414:7;3423:6;3398:8;:32::i;10761:441:28:-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:28;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:28;;7781:2:37;11010:68:28;;;7763:21:37;7820:2;7800:18;;;7793:30;7859:31;7839:18;;;7832:59;7908:18;;11010:68:28;7579:353:37;11010:68:28;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:28;;7593:68;;;;-1:-1:-1;;;7593:68:28;;8139:2:37;7593:68:28;;;8121:21:37;8178:2;8158:18;;;8151:30;8217:34;8197:18;;;8190:62;-1:-1:-1;;;8268:18:37;;;8261:35;8313:19;;7593:68:28;7937:401:37;7593:68:28;-1:-1:-1;;;;;7679:16:28;;7671:64;;;;-1:-1:-1;;;7671:64:28;;8545:2:37;7671:64:28;;;8527:21:37;8584:2;8564:18;;;8557:30;8623:34;8603:18;;;8596:62;-1:-1:-1;;;8674:18:37;;;8667:33;8717:19;;7671:64:28;8343:399:37;7671:64:28;-1:-1:-1;;;;;7817:15:28;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:28;;8949:2:37;7842:72:28;;;8931:21:37;8988:2;8968:18;;;8961:30;9027:34;9007:18;;;9000:62;-1:-1:-1;;;9078:18:37;;;9071:36;9124:19;;7842:72:28;8747:402:37;7842:72:28;-1:-1:-1;;;;;7948:15:28;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:28;8054:4;-1:-1:-1;;;;;8045:26:28;;8064:6;8045:26;;;;1342:25:37;;1330:2;1315:18;;1196:177;8045:26:28;;;;;;;;8082:37;11786:121;2433:187:26;2525:6;;;-1:-1:-1;;;;;2541:17:26;;;-1:-1:-1;;;;;;2541:17:26;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:548:37:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:37;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:37:o;1378:::-;1446:6;1454;1507:2;1495:9;1486:7;1482:23;1478:32;1475:52;;;1523:1;1520;1513:12;1475:52;1559:9;1546:23;1536:33;;1588:38;1622:2;1611:9;1607:18;1588:38;:::i;:::-;1578:48;;1378:254;;;;;:::o;1637:328::-;1714:6;1722;1730;1783:2;1771:9;1762:7;1758:23;1754:32;1751:52;;;1799:1;1796;1789:12;1751:52;1822:29;1841:9;1822:29;:::i;:::-;1812:39;;1870:38;1904:2;1893:9;1889:18;1870:38;:::i;:::-;1860:48;;1955:2;1944:9;1940:18;1927:32;1917:42;;1637:328;;;;;:::o;2159:186::-;2218:6;2271:2;2259:9;2250:7;2246:23;2242:32;2239:52;;;2287:1;2284;2277:12;2239:52;2310:29;2329:9;2310:29;:::i;:::-;2300:39;2159:186;-1:-1:-1;;;2159:186:37:o;2558:260::-;2626:6;2634;2687:2;2675:9;2666:7;2662:23;2658:32;2655:52;;;2703:1;2700;2693:12;2655:52;2726:29;2745:9;2726:29;:::i;:::-;2716:39;;2774:38;2808:2;2797:9;2793:18;2774:38;:::i;2823:380::-;2902:1;2898:12;;;;2945;;;2966:61;;3020:4;3012:6;3008:17;2998:27;;2966:61;3073:2;3065:6;3062:14;3042:18;3039:38;3036:161;;3119:10;3114:3;3110:20;3107:1;3100:31;3154:4;3151:1;3144:15;3182:4;3179:1;3172:15;3036:161;;2823:380;;;:::o;4598:222::-;4663:9;;;4684:10;;;4681:133;;;4736:10;4731:3;4727:20;4724:1;4717:31;4771:4;4768:1;4761:15;4799:4;4796:1;4789:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "liquidityStakingAddress()": "9cd321ad",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setLiqStakingAddress(address)": "f366c6a6",
    "stakeMint(uint256,address)": "1d6a9757",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityStakingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liqStaking\",\"type\":\"address\"}],\"name\":\"setLiqStakingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"}],\"name\":\"stakeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"returns\":{\"_0\":\"uint8                    Returns 0 decimals of GCOIN\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"liquidityStakingAddress()\":{\"returns\":{\"_0\":\"address                    Returns address of liquidity staking contract\"}},\"mint(address,uint256)\":{\"params\":{\"amount\":\"The amount of GCOIN to mint\",\"to\":\"The address where the tokens are minted to\"},\"returns\":{\"_0\":\"bool                     Returns true if the operation is successful\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setLiqStakingAddress(address)\":{\"params\":{\"liqStaking\":\"The address of the liquidity staking contract\"}},\"stakeMint(uint256,address)\":{\"params\":{\"amount\":\"The amount of GCOIN to mint, approve and stake\",\"liquidityProvider\":\"The address of the liquidity provider\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decimals()\":{\"notice\":\"decimals                 1 GCOIN represents 1 gram of gold. We don't have                                  decimals in GCOIN\"},\"mint(address,uint256)\":{\"notice\":\"mint                     Owner function to mint GCOIN. Mint is based on the                                  amount of gold stored in the vault.                                  1 gram of gold = 1 GCOIN\"},\"setLiqStakingAddress(address)\":{\"notice\":\"setLiqStakingAddress     Owner function to set the address of the liquidity                                  staking contract\"},\"stakeMint(uint256,address)\":{\"notice\":\"stakeMint                Owner function to mint GCOIN, approve and stake                                  GCOIN to the liquidity staking contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GCOIN.sol\":\"GCOIN\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/GCOIN.sol\":{\"keccak256\":\"0xd29caf586ef3131c9f36f1c103746de53a70458a0fa3fadebed27d396eb29839\",\"urls\":[\"bzz-raw://3b991a4267bdb73c1f8e8cccf4337f0aaf103c65110c632c7ce6a6e81f056b51\",\"dweb:/ipfs/QmPvszRamY16ehRXep5qpkrqktYxsuMrqz5qEEA7d8sbKu\"]},\"contracts/interfaces/ILiquidityProviderStaking.sol\":{\"keccak256\":\"0xa5999e87f46bdcc6e2965fe7757042809faa08bd6879e544d041979e80926b54\",\"urls\":[\"bzz-raw://dafcc23ef179e70bb9c8f11456b3bda8c9dd7d31bcd1a4a5df34cbcd9960e2b3\",\"dweb:/ipfs/QmddpcketNYf1b4bsBKQeoMpzChq8CetR7JT72y4wTksvF\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidityStakingAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liqStaking",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLiqStakingAddress"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "liquidityProvider",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stakeMint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "returns": {
              "_0": "uint8                    Returns 0 decimals of GCOIN"
            }
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "liquidityStakingAddress()": {
            "returns": {
              "_0": "address                    Returns address of liquidity staking contract"
            }
          },
          "mint(address,uint256)": {
            "params": {
              "amount": "The amount of GCOIN to mint",
              "to": "The address where the tokens are minted to"
            },
            "returns": {
              "_0": "bool                     Returns true if the operation is successful"
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setLiqStakingAddress(address)": {
            "params": {
              "liqStaking": "The address of the liquidity staking contract"
            }
          },
          "stakeMint(uint256,address)": {
            "params": {
              "amount": "The amount of GCOIN to mint, approve and stake",
              "liquidityProvider": "The address of the liquidity provider"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "decimals()": {
            "notice": "decimals                 1 GCOIN represents 1 gram of gold. We don't have                                  decimals in GCOIN"
          },
          "mint(address,uint256)": {
            "notice": "mint                     Owner function to mint GCOIN. Mint is based on the                                  amount of gold stored in the vault.                                  1 gram of gold = 1 GCOIN"
          },
          "setLiqStakingAddress(address)": {
            "notice": "setLiqStakingAddress     Owner function to set the address of the liquidity                                  staking contract"
          },
          "stakeMint(uint256,address)": {
            "notice": "stakeMint                Owner function to mint GCOIN, approve and stake                                  GCOIN to the liquidity staking contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=foundry/lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/GCOIN.sol": "GCOIN"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/GCOIN.sol": {
        "keccak256": "0xd29caf586ef3131c9f36f1c103746de53a70458a0fa3fadebed27d396eb29839",
        "urls": [
          "bzz-raw://3b991a4267bdb73c1f8e8cccf4337f0aaf103c65110c632c7ce6a6e81f056b51",
          "dweb:/ipfs/QmPvszRamY16ehRXep5qpkrqktYxsuMrqz5qEEA7d8sbKu"
        ],
        "license": null
      },
      "contracts/interfaces/ILiquidityProviderStaking.sol": {
        "keccak256": "0xa5999e87f46bdcc6e2965fe7757042809faa08bd6879e544d041979e80926b54",
        "urls": [
          "bzz-raw://dafcc23ef179e70bb9c8f11456b3bda8c9dd7d31bcd1a4a5df34cbcd9960e2b3",
          "dweb:/ipfs/QmddpcketNYf1b4bsBKQeoMpzChq8CetR7JT72y4wTksvF"
        ],
        "license": null
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/GCOIN.sol",
    "id": 1199,
    "exportedSymbols": {
      "Context": [
        30165
      ],
      "ERC20": [
        29428
      ],
      "GCOIN": [
        1198
      ],
      "IERC20": [
        29506
      ],
      "IERC20Metadata": [
        29531
      ],
      "ILiquidityProviderStaking": [
        1260
      ],
      "Ownable": [
        28802
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:3460:1",
    "nodes": [
      {
        "id": 1022,
        "nodeType": "PragmaDirective",
        "src": "0:23:1",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 1023,
        "nodeType": "ImportDirective",
        "src": "25:52:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1199,
        "sourceUnit": 28803,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1024,
        "nodeType": "ImportDirective",
        "src": "78:55:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1199,
        "sourceUnit": 29429,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1025,
        "nodeType": "ImportDirective",
        "src": "134:52:1",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ILiquidityProviderStaking.sol",
        "file": "./interfaces/ILiquidityProviderStaking.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1199,
        "sourceUnit": 1261,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1198,
        "nodeType": "ContractDefinition",
        "src": "188:3272:1",
        "nodes": [
          {
            "id": 1032,
            "nodeType": "VariableDeclaration",
            "src": "227:51:1",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_liquidityStaking",
            "nameLocation": "261:17:1",
            "scope": 1198,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILiquidityProviderStaking_$1260",
              "typeString": "contract ILiquidityProviderStaking"
            },
            "typeName": {
              "id": 1031,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1030,
                "name": "ILiquidityProviderStaking",
                "nameLocations": [
                  "227:25:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1260,
                "src": "227:25:1"
              },
              "referencedDeclaration": 1260,
              "src": "227:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILiquidityProviderStaking_$1260",
                "typeString": "contract ILiquidityProviderStaking"
              }
            },
            "visibility": "private"
          },
          {
            "id": 1040,
            "nodeType": "FunctionDefinition",
            "src": "285:40:1",
            "nodes": [],
            "body": {
              "id": 1039,
              "nodeType": "Block",
              "src": "323:2:1",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "47434f494e",
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "305:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6e259a6d6de34d3e0a45292719268882043bfe607067da59b3b10d87dfe7c532",
                      "typeString": "literal_string \"GCOIN\""
                    },
                    "value": "GCOIN"
                  },
                  {
                    "hexValue": "47434f494e",
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "314:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6e259a6d6de34d3e0a45292719268882043bfe607067da59b3b10d87dfe7c532",
                      "typeString": "literal_string \"GCOIN\""
                    },
                    "value": "GCOIN"
                  }
                ],
                "id": 1037,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1034,
                  "name": "ERC20",
                  "nameLocations": [
                    "299:5:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29428,
                  "src": "299:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "299:23:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "296:2:1"
            },
            "returnParameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:0:1"
            },
            "scope": 1198,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1050,
            "nodeType": "FunctionDefinition",
            "src": "569:82:1",
            "nodes": [],
            "body": {
              "id": 1049,
              "nodeType": "Block",
              "src": "626:25:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "643:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 1046,
                  "id": 1048,
                  "nodeType": "Return",
                  "src": "636:8:1"
                }
              ]
            },
            "baseFunctions": [
              28917
            ],
            "documentation": {
              "id": 1041,
              "nodeType": "StructuredDocumentation",
              "src": "331:233:1",
              "text": " @notice decimals                 1 GCOIN represents 1 gram of gold. We don't have\n                                  decimals in GCOIN\n @return uint8                    Returns 0 decimals of GCOIN"
            },
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "578:8:1",
            "overrides": {
              "id": 1043,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "601:8:1"
            },
            "parameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:2:1"
            },
            "returnParameters": {
              "id": 1046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1045,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "619:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "618:7:1"
            },
            "scope": 1198,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1062,
            "nodeType": "FunctionDefinition",
            "src": "761:117:1",
            "nodes": [],
            "body": {
              "id": 1061,
              "nodeType": "Block",
              "src": "828:50:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1058,
                        "name": "_liquidityStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "853:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityProviderStaking_$1260",
                          "typeString": "contract ILiquidityProviderStaking"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILiquidityProviderStaking_$1260",
                          "typeString": "contract ILiquidityProviderStaking"
                        }
                      ],
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "845:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1056,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "845:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "845:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1055,
                  "id": 1060,
                  "nodeType": "Return",
                  "src": "838:33:1"
                }
              ]
            },
            "documentation": {
              "id": 1051,
              "nodeType": "StructuredDocumentation",
              "src": "657:99:1",
              "text": " @return address                    Returns address of liquidity staking contract"
            },
            "functionSelector": "9cd321ad",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidityStakingAddress",
            "nameLocation": "770:23:1",
            "parameters": {
              "id": 1052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "793:2:1"
            },
            "returnParameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1054,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "819:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "818:9:1"
            },
            "scope": 1198,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1082,
            "nodeType": "FunctionDefinition",
            "src": "1388:136:1",
            "nodes": [],
            "body": {
              "id": 1081,
              "nodeType": "Block",
              "src": "1461:63:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1075,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "1485:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1076,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1067,
                        "src": "1489:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1074,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29245,
                      "src": "1479:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1479:17:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:17:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1513:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1073,
                  "id": 1080,
                  "nodeType": "Return",
                  "src": "1506:11:1"
                }
              ]
            },
            "documentation": {
              "id": 1063,
              "nodeType": "StructuredDocumentation",
              "src": "884:499:1",
              "text": " @notice mint                     Owner function to mint GCOIN. Mint is based on the\n                                  amount of gold stored in the vault.\n                                  1 gram of gold = 1 GCOIN\n @param to                        The address where the tokens are minted to\n @param amount                    The amount of GCOIN to mint\n @return bool                     Returns true if the operation is successful"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1070,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1069,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1427:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28721,
                  "src": "1427:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1427:9:1"
              }
            ],
            "name": "mint",
            "nameLocation": "1397:4:1",
            "parameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1410:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "1402:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1419:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "1414:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:25:1"
            },
            "returnParameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "1455:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1454:6:1"
            },
            "scope": 1198,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1146,
            "nodeType": "FunctionDefinition",
            "src": "1894:498:1",
            "nodes": [],
            "body": {
              "id": 1145,
              "nodeType": "Block",
              "src": "1972:420:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1095,
                              "name": "_liquidityStaking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1032,
                              "src": "1998:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILiquidityProviderStaking_$1260",
                                "typeString": "contract ILiquidityProviderStaking"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ILiquidityProviderStaking_$1260",
                                "typeString": "contract ILiquidityProviderStaking"
                              }
                            ],
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1990:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1093,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1990:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1990:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2028:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2020:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1097,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2020:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2020:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1990:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6971756964697479207374616b696e672061646472657373206e6f7420736574",
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2032:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bdc025851f480da2c9a066d84e84fe9c0d9a0e8f1861203e33f4988a65e48d49",
                          "typeString": "literal_string \"Liquidity staking address not set\""
                        },
                        "value": "Liquidity staking address not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bdc025851f480da2c9a066d84e84fe9c0d9a0e8f1861203e33f4988a65e48d49",
                          "typeString": "literal_string \"Liquidity staking address not set\""
                        }
                      ],
                      "id": 1092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1982:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1982:86:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "ExpressionStatement",
                  "src": "1982:86:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1106,
                          "name": "liquidityProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1087,
                          "src": "2086:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2115:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2107:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1107,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2107:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2107:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2086:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f72206d696e74696e6720746f206164647265737320283029",
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2119:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_faad6fd3d1043c14bbb65892eca5f1a348f54bbacc9e6659f4add2fcd46af90a",
                          "typeString": "literal_string \"Error minting to address (0)\""
                        },
                        "value": "Error minting to address (0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_faad6fd3d1043c14bbb65892eca5f1a348f54bbacc9e6659f4add2fcd46af90a",
                          "typeString": "literal_string \"Error minting to address (0)\""
                        }
                      ],
                      "id": 1105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2078:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:72:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1114,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1118,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2174:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GCOIN_$1198",
                              "typeString": "contract GCOIN"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GCOIN_$1198",
                              "typeString": "contract GCOIN"
                            }
                          ],
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2166:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1116,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2166:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2166:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1120,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "2181:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1115,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29245,
                      "src": "2160:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2160:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "2160:28:1"
                },
                {
                  "assignments": [
                    1124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1124,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2204:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1145,
                      "src": "2199:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1123,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2199:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1132,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1128,
                            "name": "_liquidityStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1032,
                            "src": "2241:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILiquidityProviderStaking_$1260",
                              "typeString": "contract ILiquidityProviderStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ILiquidityProviderStaking_$1260",
                              "typeString": "contract ILiquidityProviderStaking"
                            }
                          ],
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2233:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2233:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2233:26:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1130,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "2261:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1125,
                      "name": "_approveStakeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1197,
                      "src": "2215:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2215:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2198:70:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1134,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "2286:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "617070726f76655374616b654d696e74206661696c6564",
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2295:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb176c88b9022a12a8454403fa317de6626e9a9787cd71f34dff799aba0d540e",
                          "typeString": "literal_string \"approveStakeMint failed\""
                        },
                        "value": "approveStakeMint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb176c88b9022a12a8454403fa317de6626e9a9787cd71f34dff799aba0d540e",
                          "typeString": "literal_string \"approveStakeMint failed\""
                        }
                      ],
                      "id": 1133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2278:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2278:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "2278:43:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1141,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "2359:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1142,
                        "name": "liquidityProvider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "2367:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1138,
                        "name": "_liquidityStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "2331:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityProviderStaking_$1260",
                          "typeString": "contract ILiquidityProviderStaking"
                        }
                      },
                      "id": 1140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2349:9:1",
                      "memberName": "mintStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1254,
                      "src": "2331:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1144,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:54:1"
                }
              ]
            },
            "documentation": {
              "id": 1083,
              "nodeType": "StructuredDocumentation",
              "src": "1530:359:1",
              "text": " @notice stakeMint                Owner function to mint GCOIN, approve and stake\n                                  GCOIN to the liquidity staking contract.\n @param amount                    The amount of GCOIN to mint, approve and stake\n @param liquidityProvider         The address of the liquidity provider"
            },
            "functionSelector": "1d6a9757",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1090,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1089,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1962:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28721,
                  "src": "1962:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1962:9:1"
              }
            ],
            "name": "stakeMint",
            "nameLocation": "1903:9:1",
            "parameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1918:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1146,
                  "src": "1913:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "liquidityProvider",
                  "nameLocation": "1934:17:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1146,
                  "src": "1926:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1926:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:40:1"
            },
            "returnParameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1972:0:1"
            },
            "scope": 1198,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1171,
            "nodeType": "FunctionDefinition",
            "src": "2655:233:1",
            "nodes": [],
            "body": {
              "id": 1170,
              "nodeType": "Block",
              "src": "2724:164:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1155,
                          "name": "liqStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1149,
                          "src": "2742:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2764:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2756:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1156,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2756:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2756:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2742:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f722073657474696e67206c6971756964697479207374616b696e67206164647265737320283029",
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2768:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f921c9c60c3c2a0412fccff67adfb4bf260c631520ad81a85e9be2e8811a295",
                          "typeString": "literal_string \"Error setting liquidity staking address (0)\""
                        },
                        "value": "Error setting liquidity staking address (0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f921c9c60c3c2a0412fccff67adfb4bf260c631520ad81a85e9be2e8811a295",
                          "typeString": "literal_string \"Error setting liquidity staking address (0)\""
                        }
                      ],
                      "id": 1154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2734:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2734:80:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1163,
                  "nodeType": "ExpressionStatement",
                  "src": "2734:80:1"
                },
                {
                  "expression": {
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1164,
                      "name": "_liquidityStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1032,
                      "src": "2824:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILiquidityProviderStaking_$1260",
                        "typeString": "contract ILiquidityProviderStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1166,
                          "name": "liqStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1149,
                          "src": "2870:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1165,
                        "name": "ILiquidityProviderStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "2844:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILiquidityProviderStaking_$1260_$",
                          "typeString": "type(contract ILiquidityProviderStaking)"
                        }
                      },
                      "id": 1167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2844:37:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILiquidityProviderStaking_$1260",
                        "typeString": "contract ILiquidityProviderStaking"
                      }
                    },
                    "src": "2824:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityProviderStaking_$1260",
                      "typeString": "contract ILiquidityProviderStaking"
                    }
                  },
                  "id": 1169,
                  "nodeType": "ExpressionStatement",
                  "src": "2824:57:1"
                }
              ]
            },
            "documentation": {
              "id": 1147,
              "nodeType": "StructuredDocumentation",
              "src": "2398:252:1",
              "text": " @notice setLiqStakingAddress     Owner function to set the address of the liquidity\n                                  staking contract\n @param liqStaking                The address of the liquidity staking contract"
            },
            "functionSelector": "f366c6a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1152,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1151,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2705:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28721,
                  "src": "2705:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2705:9:1"
              }
            ],
            "name": "setLiqStakingAddress",
            "nameLocation": "2664:20:1",
            "parameters": {
              "id": 1150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1149,
                  "mutability": "mutable",
                  "name": "liqStaking",
                  "nameLocation": "2693:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1171,
                  "src": "2685:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2685:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2684:20:1"
            },
            "returnParameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2724:0:1"
            },
            "scope": 1198,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1197,
            "nodeType": "FunctionDefinition",
            "src": "3265:193:1",
            "nodes": [],
            "body": {
              "id": 1196,
              "nodeType": "Block",
              "src": "3349:109:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1182,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3367:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1196,
                      "src": "3359:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1181,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3359:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1187,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1185,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3383:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GCOIN_$1198",
                          "typeString": "contract GCOIN"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GCOIN_$1198",
                          "typeString": "contract GCOIN"
                        }
                      ],
                      "id": 1184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3375:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1183,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3375:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3375:13:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3359:29:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1189,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "3407:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1190,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1174,
                        "src": "3414:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1191,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1176,
                        "src": "3423:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1188,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29362,
                      "src": "3398:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3398:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "ExpressionStatement",
                  "src": "3398:32:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3447:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1180,
                  "id": 1195,
                  "nodeType": "Return",
                  "src": "3440:11:1"
                }
              ]
            },
            "documentation": {
              "id": 1172,
              "nodeType": "StructuredDocumentation",
              "src": "2894:366:1",
              "text": " @notice _approveStakeMint        Internal function to approve GCOIN to the liquidity provider\n @param spender                   The address of the liquidity provider\n @param amount                    The amount of GCOIN to approve\n @return bool                     Returns true if the operation is successful"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approveStakeMint",
            "nameLocation": "3274:17:1",
            "parameters": {
              "id": 1177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3300:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "3292:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3292:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1176,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3317:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "3309:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3309:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3291:33:1"
            },
            "returnParameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1179,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "3343:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3343:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3342:6:1"
            },
            "scope": 1198,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1026,
              "name": "ERC20",
              "nameLocations": [
                "206:5:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29428,
              "src": "206:5:1"
            },
            "id": 1027,
            "nodeType": "InheritanceSpecifier",
            "src": "206:5:1"
          },
          {
            "baseName": {
              "id": 1028,
              "name": "Ownable",
              "nameLocations": [
                "213:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28802,
              "src": "213:7:1"
            },
            "id": 1029,
            "nodeType": "InheritanceSpecifier",
            "src": "213:7:1"
          }
        ],
        "canonicalName": "GCOIN",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1198,
          28802,
          29428,
          29531,
          29506,
          30165
        ],
        "name": "GCOIN",
        "nameLocation": "197:5:1",
        "scope": 1199,
        "usedErrors": []
      }
    ]
  },
  "id": 1
}